{"version":3,"sources":["components/GameContext.jsx","components/Menus.jsx","components/Block.jsx","functions/Blocks.jsx","functions/convertor.jsx","functions/move.jsx","functions/generator.jsx","components/BlocksContainer.jsx","components/Grid.jsx","components/EndGameScreen.jsx","components/MainContainer.jsx","components/Header.jsx","GameConfig.jsx","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","MenuContainer","styled","div","_templateObject","Menus","props","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","useEffect","_useContext","useContext","setGameRestart","gameRestart","_useState3","_useState4","isOpen","setIsOpen","react_default","a","createElement","style","List_default","backgroundColor","boxShadow","borderRadius","ListItem_default","button","onClick","ListItemText_default","inset","primary","color","fontWeight","fontFamily","fontSize","paddingLeft","marginTop","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","textAlign","borderBottom","Button_default","variant","size","Cookies","set","path","Block","COLOR_SCHEME","BG_COLOR","position","setPosition","_useState5","_useState6","setColor","num","height","left","top","lineHeight","boxSizing","border","Blocks","data","setData","blockWidth","setBlockWidth","react","map","x","index","components_Block","key","BLOCKS_IN_ONE_LINE","get","convertor","result","subLevel","m","push","n","concat","propTypes","PropTypes","arrayOf","shape","number","reverseConvertor","moveHandler","eventType","isGameOver","arguments","length","undefined","score","twoDArray","console","log","A","toConsumableArray","i","thisArray","j","reverse","zip","apply","generator","dataCopy","resultTwoDArray","generatorWithTwoDArray","generatorOne","potentialPosition","topFloor","_generateNumber","generateNumber","_generateNumber2","num1","num2","_generatePosition","generatePosition","_generatePosition2","position1","position2","defaultProps","topFloorCheckLowest","pool","filter","sample","isRequired","sampleSize","BlocksContainer","getJSON","initState","_useContext2","context","setContext","_useContext3","eventHandler","e","_moveHandler","code","_moveHandler2","newState","movementFailure","differenceWith","isEqual","Math","pow","window","location","reload","addEventListener","removeEventListener","functions_Blocks","Grid","BG_BLOCK_COLOR","grids","gridHeight","setGridHeight","id","flexGrow","flexShrink","flexBasis","EndGame","display","zIndex","Container","MainContainer_templateObject","Main","_templateObject2","SideHolder","_templateObject3","MainContainer","minWidth","setLineHeight","setHeight","thisHeight","getComputedStyle","document","getElementById","numThisHeight","Number","split","setBlcokWidth","EndGameScreen","innerWidth","innerHeight","className","components_BlocksContainer","components_Grid","components_Menus","HeaderContainer","Header_templateObject","Header","GAME_NAME","GAME_DESCRIPTION","HEADER_HEIGHT","flex","maxWidth","flexDirection","justifyContent","2","4","8","16","32","64","128","256","512","1024","2048","super","App","cachedScore","gameContext","setGameContext","Provider","value","components_Header","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49ab253e.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const GameContext = createContext({});","import React, { useState, useEffect,useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { GameContext } from './GameContext';\r\nimport Cookies from 'js-cookie';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\n\r\nconst MenuContainer = styled.div`\r\n    margin-top: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst Menus = function CreateBottomMenu(props) {\r\n    const [width, setWidth] = useState('400px');\r\n\r\n    useEffect( () => {\r\n        setWidth(props.width);\r\n    }, [props.width] );\r\n\r\n    const { gameRestart, setGameRestart  } = useContext(GameContext);\r\n    const [ isOpen, setIsOpen ] = useState(false);\r\n\r\n    function restartGame() {\r\n        setGameRestart(true);\r\n        Cookies.set('score',0, {path:'/'});\r\n    }\r\n\r\n    return(\r\n        <MenuContainer style={{ 'width':width }}>\r\n            {/* <Button variant=\"contained\" color=\"secondary\" size=\"medium\">Game Level</Button> */}\r\n            <List style={{\r\n                    'backgroundColor': '#f50057',\r\n                    'boxShadow': '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n                    'borderRadius': '4px', \r\n                    }}>\r\n                <ListItem button onClick={()=>{setIsOpen(!isOpen)}}>\r\n                    <ListItemText inset \r\n                    primary={<span style={{ \r\n                            \"color\": \"#fff\",\r\n                            'fontWeight': '500',\r\n                            'fontFamily': '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n                            'fontSize': '0.875rem', \r\n                        }}>GAME LEVEL</span>} \r\n                    style={{\r\n                        'color': '#fff',\r\n                        'paddingLeft': '10px',\r\n                        'marginTop': '-10px',\r\n                    }}/>\r\n                    {isOpen ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n                    <List component=\"div\" disablePadding style={{\r\n                        'backgroundColor': '#282c34',\r\n                    }}>\r\n                        <ListItem button>\r\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>4 x 4</span>} style={{\r\n                                'paddingLeft': '10px',\r\n                                'textAlign': 'center',\r\n                                'borderBottom': '1px solid #fff',\r\n                            }}/>\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>5 x 5</span>} style={{\r\n                                'paddingLeft': '10px',\r\n                                'textAlign': 'center',\r\n                                'borderBottom': '1px solid #fff',\r\n                            }}/>\r\n                        </ListItem>\r\n                        <ListItem button>\r\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>10 x 10</span>} style={{\r\n                                'paddingLeft': '10px',\r\n                                'textAlign': 'center',\r\n                                'borderBottom': '1px solid #fff',\r\n                            }}/>\r\n                        </ListItem>\r\n                    </List>\r\n                </Collapse>\r\n            </List>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={restartGame}>Restart</Button>\r\n        </MenuContainer>      \r\n    );\r\n}\r\n\r\nMenus.propTypes = {\r\n    width: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Menus;","import React, { useState, useEffect, useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GameContext } from './GameContext';\r\n\r\nconst Block = function indivitualBlock(props) {\r\n    const { COLOR_SCHEME, BG_COLOR } = useContext(GameContext);\r\n\r\n    const [width, setWidth] = useState(0);\r\n    useEffect( () => {\r\n        setWidth(props.width);\r\n    },[props.width]);\r\n\r\n    const [position, setPosition] = useState(props.position);\r\n    useEffect( () => {\r\n        setPosition(props.position);\r\n    },[props.position]);\r\n\r\n    const [color, setColor] = useState(COLOR_SCHEME[2]);\r\n    useEffect( () => {\r\n        if (!!COLOR_SCHEME[props.num]) setColor(COLOR_SCHEME[props.num]);\r\n    },[props.num]);\r\n\r\n    return(\r\n        <div style={{\r\n            'width': width+'px',\r\n            'height': width + 'px',\r\n            'position': 'absolute',\r\n            'left': (position[0] * width) + 'px',\r\n            'top': (position[1] * width) + 'px',\r\n            'lineHeight': (width - 20) + 'px',\r\n            'textAlign': 'center',\r\n            'color': props.num>256 ? '#f2f2f2' : '#000',\r\n            'fontSize': props.num>64 ? '2rem' : '2.5rem',\r\n            'fontWeight': 'bold',\r\n            'backgroundColor': color,\r\n            'boxSizing': 'border-box',\r\n            'border': '10px solid ' + BG_COLOR,\r\n        }}>\r\n            {props.num}\r\n        </div>\r\n    );\r\n}\r\n\r\nBlock.propTypes = {\r\n    num: PropTypes.number.isRequired,\r\n    position: PropTypes.array.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Block;","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Block from '../components/Block';\r\n\r\nconst Blocks = function drawAllBlocks(props) {\r\n    const [data,setData] = useState(props.data);\r\n    useEffect(() => {\r\n        setData(props.data);\r\n    },[props.data]);\r\n\r\n    const [blockWidth, setBlockWidth] = useState(props.blockWidth);\r\n    useEffect(() => {\r\n        setBlockWidth(props.blockWidth);\r\n    },[props.blockWidth]);\r\n\r\n    return(\r\n        <Fragment>\r\n            {data.map((x, index)=>{\r\n                return <Block num={x.num} key={index} position={x.position} width={blockWidth}></Block>\r\n            })}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nBlocks.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    position: PropTypes.arrayOf(PropTypes.number),\r\n                    num: PropTypes.number,\r\n                })\r\n            ),\r\n    blockWidth: PropTypes.number,\r\n}\r\n\r\nexport default Blocks;","import PropTypes from 'prop-types';\r\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\r\n\r\nconst convertor = function convertObjectArrayToTwoDimentionArray(data) {\r\n    let result = [];\r\n    let subLevel = [];\r\n    for(let m=0; m<BLOCKS_IN_ONE_LINE; m+=1) {\r\n        subLevel.push(0);\r\n    }\r\n    for(let n=0; n<BLOCKS_IN_ONE_LINE; n+=1) {\r\n        result.push([...subLevel]);\r\n    }\r\n\r\n    if(!data) return result;\r\n\r\n    data.map(x => {\r\n        result[x.position[0]][x.position[1]] = x.num;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nconvertor.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            position: PropTypes.arrayOf(PropTypes.number),\r\n            num: PropTypes.number,\r\n        })\r\n    ),\r\n}\r\n\r\nconst reverseConvertor = function (data) {\r\n    let result = [];\r\n\r\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\r\n        for (let n = 0; n < BLOCKS_IN_ONE_LINE; n += 1) {\r\n            if(data[m][n]) {\r\n                result.push({\r\n                    position: [m,n],\r\n                    num: data[m][n],\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nreverseConvertor.propTypes = {\r\n    data: PropTypes.arrayOf(PropTypes.number),\r\n};\r\n\r\nexport { convertor, reverseConvertor };","// import PropTypes from 'prop-types';\r\nimport { convertor, reverseConvertor } from './convertor';\r\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\r\nimport zip from 'lodash/zip';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\r\n\r\nconst moveHandler = function listenToKeyboardAndRecieveDataAndReturnMutated(eventType, data, isGameOver = false, score = 0) {\r\n    if(isGameOver) return data;\r\n\r\n    const twoDArray = convertor(data);\r\n\r\n    if( eventType === 'ArrowDown' ) {\r\n        console.log('ArrowDown')\r\n        // check every block, see if it should move\r\n        // set attribute to those should move\r\n        // and ONLY first couple got collapsed\r\n        let A = [...twoDArray];\r\n        for (let i = BLOCKS_IN_ONE_LINE-1; i>=0; i-=1) {\r\n            let thisArray = [];\r\n            for (let j = BLOCKS_IN_ONE_LINE-1; j>=0; j-=1) {\r\n                if (A[i][j] !== 0) {\r\n                    thisArray.push(A[i][j]);\r\n                    A[i][j] = 0;\r\n                }\r\n            }\r\n            for (let m=0; m<thisArray.length-1; m+=1) {\r\n                if (thisArray[m] === 0) {\r\n                    thisArray[m] = thisArray[m+1];\r\n                    thisArray[m+1] = 0;\r\n                }\r\n                if (thisArray[m] === thisArray[m+1]) {\r\n                    thisArray[m] = (thisArray[m]+thisArray[m+1]);\r\n                    thisArray[m+1] = 0;\r\n                    score += thisArray[m];//increase game score\r\n                }\r\n                // A[i][BLOCKS_IN_ONE_LINE-1-m] = thisArray[m];\r\n            }\r\n            thisArray.length = BLOCKS_IN_ONE_LINE;//fill thisArray with undefined to length to BLOCKS_IN_ONE_LINE\r\n            for (let n=0; n<thisArray.length; n+=1) {\r\n                if(!!thisArray[n]) {\r\n                    //do nothing\r\n                } else {\r\n                    thisArray[n] = 0;\r\n                }\r\n            }\r\n            A[i] = thisArray.reverse();\r\n        }// end of move down\r\n\r\n        return [ reverseConvertor(A), score ];\r\n    }\r\n\r\n    if( eventType === 'ArrowUp') {\r\n        console.log('ArrowUp')\r\n        let A = [...twoDArray];\r\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\r\n            let thisArray = [];\r\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\r\n                if (A[i][j] !== 0) {\r\n                    thisArray.push(A[i][j]);\r\n                    A[i][j] = 0;\r\n                }\r\n            }\r\n            for (let m = thisArray.length - 1; m >0; m-=1) {\r\n                if (thisArray[m] === 0) {\r\n                    thisArray[m] = thisArray[m - 1];\r\n                    thisArray[m - 1] = 0;\r\n                }\r\n                if (thisArray[m] === thisArray[m - 1]) {\r\n                    thisArray[m] = (thisArray[m] + thisArray[m - 1]);\r\n                    thisArray[m - 1] = 0;\r\n                    score += thisArray[m];//increase game score\r\n                }\r\n            }\r\n            for (let n = thisArray.length -1; n > 0; n -= 1) {\r\n                if (!!thisArray[n]) {\r\n                    //do nothing\r\n                } else {\r\n                    thisArray[n] = 0;\r\n                }\r\n            }\r\n            A[i] = thisArray.reverse();\r\n        }\r\n        return [ reverseConvertor(A), score ];\r\n    }\r\n\r\n    if( eventType === 'ArrowLeft') {\r\n        console.log('ArrowLeft')\r\n        //transposing\r\n        let A = zip(...twoDArray);\r\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\r\n            let thisArray = [];\r\n            for (let j = 0; j <= BLOCKS_IN_ONE_LINE - 1; j += 1) {\r\n                if (A[i][j] !== 0) {\r\n                    thisArray.push(A[i][j]);\r\n                    A[i][j] = 0;\r\n                }\r\n            }\r\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\r\n                if (thisArray[m] === 0) {\r\n                    thisArray[m] = thisArray[m + 1];\r\n                    thisArray[m + 1] = 0;\r\n                }\r\n                if (thisArray[m] === thisArray[m + 1]) {\r\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\r\n                    thisArray[m + 1] = 0;\r\n                    score += thisArray[m];//increase game score\r\n                }\r\n            }\r\n            \r\n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\r\n                if (!!thisArray[n]) {\r\n                    //do nothing\r\n                } else {\r\n                    thisArray[n] = 0;\r\n                }\r\n            }\r\n            A[i] = thisArray;\r\n        }\r\n        return [ reverseConvertor(zip(...A)), score ];\r\n    }\r\n\r\n    if( eventType === 'ArrowRight') {\r\n        console.log('ArrowRight')\r\n        //transposing\r\n        let A = zip(...twoDArray);\r\n\r\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\r\n            let thisArray = [];\r\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\r\n                if (A[i][j] !== 0) {\r\n                    thisArray.push(A[i][j]);\r\n                    A[i][j] = 0;\r\n                }\r\n            }\r\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\r\n                if (thisArray[m] === 0) {\r\n                    thisArray[m] = thisArray[m + 1];\r\n                    thisArray[m + 1] = 0;\r\n                }\r\n                if (thisArray[m] === thisArray[m + 1]) {\r\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\r\n                    thisArray[m + 1] = 0;\r\n                    score += thisArray[m];//increase game score\r\n                }\r\n            }\r\n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\r\n                if (!!thisArray[n]) {\r\n                    //do nothing\r\n                } else {\r\n                    thisArray[n] = 0;\r\n                }\r\n            }\r\n            A[i] = thisArray.reverse();\r\n        }\r\n        return [ reverseConvertor(zip(...A)), score ];\r\n    }\r\n}\r\n\r\n// moveHandler.propTypes = {\r\n//     eventType: PropTypes.string.isRequired,\r\n//     data: PropTypes.arrayOf(\r\n//             PropTypes.shape({\r\n//                 position: PropTypes.arrayOf(PropTypes.number),\r\n//                 num: PropTypes.number,\r\n//             })\r\n//         ),\r\n//     isGameOver: PropTypes.bool,\r\n//     score: PropTypes.number.isRequired,\r\n// }\r\n\r\nexport default moveHandler;","import PropTypes from 'prop-types';\r\nimport { convertor, reverseConvertor } from './convertor';import sample from 'lodash/sample';\r\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\r\nimport sampleSize from 'lodash/sampleSize';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\r\n\r\nconst generator = function generatorTwoNodesRandomly(data) {\r\n    const twoDArray = convertor(data);\r\n    const dataCopy = [...twoDArray];\r\n\r\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy);\r\n     \r\n    if (!resultTwoDArray) return false;\r\n    const result = reverseConvertor(resultTwoDArray);\r\n    return result;\r\n}\r\n\r\nconst generatorOne = function generatorOneNodeRandomly(data) {\r\n    const twoDArray = convertor(data);\r\n    const dataCopy = [...twoDArray];\r\n\r\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 1);\r\n\r\n    if (!resultTwoDArray) return false;\r\n    const result = reverseConvertor(resultTwoDArray);\r\n    return result;\r\n}\r\n\r\nconst generatorWithTwoDArray = function (data, size = 2) {\r\n    let potentialPosition = [];\r\n    let topFloor = 0;\r\n    let dataCopy = [...data];\r\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\r\n        for (let n = 0; n<BLOCKS_IN_ONE_LINE; n+=1) {\r\n            if(!dataCopy) dataCopy = 0;\r\n        }\r\n    }\r\n    for (let m = 0; m < dataCopy.length; m += 1) {\r\n        for (let n = 0; n < dataCopy[m].length; n += 1) {\r\n            if (dataCopy[m][n] > topFloor) topFloor = dataCopy[m][n];\r\n            if(!dataCopy[m][n]) potentialPosition.push([m, n]);\r\n        }\r\n    }\r\n\r\n    // if no more spaces then !!failed!!\r\n    if (potentialPosition.length === 0) return false;\r\n\r\n    if (size === 2) {\r\n        const [num1, num2] = generateNumber(topFloor);\r\n        const [position1, position2] = generatePosition(potentialPosition);\r\n\r\n        dataCopy[position1[0]][position1[1]] = num1;\r\n        dataCopy[position2[0]][position2[1]] = num2;\r\n\r\n        return dataCopy;\r\n    } \r\n\r\n    const num = generateNumber(topFloor, 1);\r\n    const position = generatePosition(potentialPosition, 1);\r\n    dataCopy[position[0]][position[1]] = num;\r\n    return dataCopy;\r\n}\r\n\r\ngenerator.defaultProps = {\r\n    data: [],\r\n};\r\n\r\n// {\r\n//     position: [3,3],\r\n//     num: 8\r\n// }\r\ngenerator.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            position: PropTypes.arrayOf(PropTypes.number),\r\n            num: PropTypes.number,\r\n        })\r\n        ),\r\n    }\r\n    \r\n/**\r\n * @param {num} topFloor indicates current biggest number on plate  \r\n */\r\nconst generateNumber = function (topFloor, size = 2) {\r\n    let topFloorCheckLowest = 2;\r\n    if( topFloor > 2 ) topFloorCheckLowest = topFloor; \r\n    const pool = [2, 4, 8, 16, 32].filter(x=> x <= topFloorCheckLowest);\r\n    const num1 = sample(pool);\r\n    const num2 = sample(pool);\r\n    if (size === 2) return [num1,num2];\r\n    return num1;\r\n}\r\n\r\ngenerateNumber.propTypes = {\r\n    topFloor : PropTypes.number.isRequired,\r\n}\r\n\r\nconst generatePosition = function (potentialPosition, size = 2) {\r\n    if (size === 2) {\r\n        const result = sampleSize(potentialPosition, 2);\r\n        return result;    \r\n    } \r\n    const result = sample(potentialPosition);\r\n    return result;\r\n}\r\n\r\ngeneratePosition.propTypes = {\r\n    potentialPosition: PropTypes.arrayOf(\r\n        PropTypes.arrayOf(PropTypes.number)\r\n    ).isRequired,\r\n}\r\n\r\nexport { generator, generatorOne, generatorWithTwoDArray };","import React, { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Blocks from '../functions/Blocks';\r\nimport moveHandler from '../functions/move';\r\nimport { generator, generatorOne } from '../functions/generator';\r\nimport differenceWith from 'lodash/differenceWith';\r\nimport isEqual from 'lodash/isEqual';\r\nimport Cookies from 'js-cookie';\r\nimport { GameContext } from './GameContext';\r\n\r\nconst BlocksContainer = function groupAllBlocksTogether(props) {\r\n    const { BLOCKS_IN_ONE_LINE } = useContext(GameContext);\r\n\r\n    if (!Cookies.getJSON('data')) Cookies.set('data',[], {path: ''});\r\n    const initState = (Cookies.getJSON('data').length === 0) ? generator([]) : Cookies.getJSON('data');\r\n    const [data, setData] = useState(initState);\r\n    \r\n    const { context, setContext } = useContext(GameContext);\r\n    const { gameRestart, setGameRestart } = useContext(GameContext);\r\n\r\n    if (gameRestart) {\r\n        Cookies.set('data', [], {path:'/'});\r\n        window.location.reload(false);\r\n    };\r\n\r\n    //move blocks \r\n    function eventHandler(e) {\r\n        let [ newState, score]= moveHandler(e.code, data, context.isGameOver);\r\n\r\n        setContext({score: context.score + score});\r\n        Cookies.set('score', context.score + score, { path: '' });\r\n\r\n        let movementFailure = false;\r\n\r\n        let diffBtwStates = differenceWith(newState, data, isEqual)\r\n        if (!diffBtwStates.length) movementFailure = true;\r\n        \r\n        // if no node are moved, should NOT generator new node\r\n        if(!movementFailure) {\r\n            newState = generatorOne(newState);\r\n            if (!!newState) {\r\n                setData(newState);\r\n                Cookies.set('data',newState, { path: ''});\r\n            } else {\r\n                setContext({isGameOver: true});\r\n                Cookies.set('data', newState, { path: '' });\r\n            }\r\n        } else {\r\n            const maxBlocksNum = BLOCKS_IN_ONE_LINE ** 2;\r\n            if (maxBlocksNum === newState.length) {\r\n                setContext({ isGameOver: true });\r\n                Cookies.set('data', [], { path: '' });\r\n            }\r\n        }\r\n\r\n        //if no space to create new node then GAME OVER\r\n    }\r\n\r\n    //add keyboard listener\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', eventHandler);\r\n        return () => {\r\n            window.removeEventListener('keydown', eventHandler)\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div style={{ 'position': 'absolute' }}>\r\n            <Blocks\r\n                data={data}\r\n                blockWidth={props.blockWidth}\r\n            ></Blocks>\r\n        </div>\r\n    );\r\n}\r\n\r\nBlocksContainer.defaultProps = {\r\n    blockWidth: 120,\r\n}\r\n\r\nBlocksContainer.propTypes = {\r\n    blockWidth : PropTypes.number.isRequired,\r\n};\r\n\r\nexport default BlocksContainer;","import React, { useState, useEffect, Fragment, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GameContext } from './GameContext';\r\n\r\nconst Grid = function getGrid(props) {\r\n    const { BLOCKS_IN_ONE_LINE, BG_BLOCK_COLOR, BG_COLOR } = useContext(GameContext);\r\n\r\n    let grids = [];\r\n    for (let i = 0; i < BLOCKS_IN_ONE_LINE ** 2; i++) {\r\n        grids.push(i);\r\n    }\r\n\r\n    const [ gridHeight, setGridHeight ] = useState(props.gridHeight);\r\n    useEffect( ()=>{\r\n        setGridHeight(props.gridHeight);\r\n    }, [props.gridHeight]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                grids.map(x => {\r\n                    return <div key={x} \r\n                            id={'grid_' + x} \r\n                            style={{    \r\n                                        'height': gridHeight, \r\n                                        'width': gridHeight,\r\n                                        'flexGrow': '1',\r\n                                        'flexShrink': '1',\r\n                                        'flexBasis': gridHeight,\r\n                                        'backgroundColor': BG_BLOCK_COLOR,\r\n                                        'border': '10px solid '+ BG_COLOR,\r\n                                        'boxSizing': 'border-box',\r\n                                                }}>\r\n                            </div>\r\n                })\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nGrid.propTypes = {\r\n    gridHeight: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Grid;","import React, { useContext } from 'react';\r\nimport { GameContext } from './GameContext';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EndGame = function endGameScreen( props ) {\r\n    const { context, } = useContext(GameContext);\r\n\r\n    return (\r\n        <div style={{\r\n            'width': props.width,\r\n            'height': props.height,\r\n            'fontSize': '4rem',\r\n            'backgroundColor': 'rgba(16,17,20,0.8)',\r\n            'textAlign': 'center',\r\n            'lineHeight': props.height,\r\n            'position': 'absolute',\r\n            'display': context.isGameOver ? 'block' : 'none',\r\n            'zIndex': '1000',\r\n        }}>\r\n            GAME OVER\r\n        </div>\r\n    );\r\n}\r\n\r\nEndGame.propTypes = {\r\n    width: PropTypes.string.isRequired,\r\n    height: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default EndGame;","import React, {  Fragment, useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// import { BLOCKS_IN_ONE_LINE, BG_COLOR, } from '../GameConfig';\r\nimport Menus from './Menus';\r\nimport BlocksContainer from './BlocksContainer';\r\nimport Grid from './Grid';\r\nimport EndGame from './EndGameScreen';\r\nimport { GameContext } from './GameContext';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n`;\r\n\r\nconst Main = styled.div`\r\n    flex-grow: 2;\r\n    flex-shrink: 1;\r\n    flex-basis: 0;\r\n    min-width: 400px;\r\n    max-width: 600px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 10px;\r\n    box-sizing: content-box;\r\n    position: relative;\r\n`;\r\n\r\nconst SideHolder = styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n`;\r\n\r\nconst MainContainer = function MainPlayGround() {\r\n    const { BLOCKS_IN_ONE_LINE, BG_COLOR } = useContext(GameContext);\r\n    const minWidth = 400;\r\n    const [lineHeight, setLineHeight] = useState('0');\r\n    const [gridHeight, setGridHeight] = useState('0');\r\n    useEffect(()=>{\r\n        setHeight();\r\n        window.addEventListener('resize',setHeight);\r\n        return(()=>{\r\n            window.removeEventListener('resize',setHeight);\r\n        });\r\n    });\r\n    \r\n    function setHeight() {\r\n        let thisHeight = window.getComputedStyle(document.getElementById('mainHolder')).width;\r\n        let numThisHeight = Number(thisHeight.split('px')[0]);\r\n        thisHeight = numThisHeight < minWidth ? minWidth : numThisHeight;\r\n        let gridHeight = thisHeight / BLOCKS_IN_ONE_LINE;\r\n        setGridHeight(gridHeight);\r\n        setLineHeight(thisHeight);\r\n    }\r\n  \r\n    const [blockWidth, setBlcokWidth] = useState(Number(gridHeight));\r\n    useEffect( ()=>{ \r\n        setBlcokWidth(Number(gridHeight));\r\n    }, [gridHeight]);\r\n\r\n    return (\r\n        <Fragment>\r\n                <EndGame width={window.innerWidth+'px'} height={window.innerHeight+'px'}></EndGame>\r\n                <Container>\r\n                    <SideHolder className={'sideHolder'}></SideHolder>\r\n                    <Main id={'mainHolder'} style={{ 'height': lineHeight + 'px', 'backgroundColor': BG_COLOR}}>\r\n                        <BlocksContainer blockWidth={ blockWidth }></BlocksContainer>\r\n                        <Grid gridHeight={gridHeight+'px'}></Grid>\r\n                    </Main>\r\n                    <SideHolder className={'sideHolder'}></SideHolder>\r\n                </Container>  \r\n                <Menus width={lineHeight+'px'}></Menus>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default MainContainer;","import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { GameContext } from './GameContext';\r\n\r\nconst HeaderContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    margin: 10px 0px;\r\n`;\r\n\r\n// flex - shrink: 1;\r\n// flex - basis: 0;\r\nconst Header = function headerContainsScoreAndDescription() {\r\n    const { GAME_NAME, GAME_DESCRIPTION, HEADER_HEIGHT, COLOR_SCHEME } = useContext(GameContext);\r\n\r\n    const { context, setContext } = useContext(GameContext);\r\n\r\n    return(\r\n        <HeaderContainer style={{'height': HEADER_HEIGHT}}>\r\n            <div style={{ 'flex': '1 1 auto' }}></div>\r\n            <div style={{ \r\n                        'flex': '2 1 0', \r\n                        'display': 'flex',\r\n                        'minWidth': '400px',\r\n                        'maxWidth': '600px', \r\n                    }}>\r\n                <div style={{ \r\n                        'flex': '1 1 auto',\r\n                        'textAlign': 'left', \r\n                        'display': 'flex',\r\n                        'flexDirection': 'column',\r\n                        'justifyContent': 'center',\r\n                        'height': HEADER_HEIGHT,\r\n                        'maxWidth': '50%',\r\n                    }}>\r\n                    <div style={{\r\n                        'flex': '2 1 auto',\r\n                        'textAlign': 'left',\r\n                        'fontSize': '3rem',\r\n                        'fontWeight': 'bold',\r\n                    }}>\r\n                        {GAME_NAME}                   \r\n                    </div>\r\n                    <div style={{\r\n                        'flex': '1 1 auto',\r\n                        'textAlign': 'left',\r\n                        'fontSize': '0.8rem',\r\n                    }}>\r\n                        {GAME_DESCRIPTION}\r\n                    </div>\r\n                </div>\r\n                <div style={{ 'flex': '1 1 auto', 'color': COLOR_SCHEME[128] }}>\r\n                    <h1>{context.score}</h1>\r\n                </div>\r\n            </div>\r\n            <div style={{ 'flex':'1 1 auto' }}></div>\r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nexport default Header;","const BLOCKS_IN_ONE_LINE = 5;\r\nconst BG_COLOR = 'rgba(136, 129, 107, 1)';\r\nconst BG_BLOCK_COLOR = 'rgba(210, 207, 207, 0.8)';\r\nconst GAME_NAME = '2048';\r\nconst GAME_DESCRIPTION = 'Join those numbers and get as big as you can, 2048 is not the end!';\r\nconst HEADER_HEIGHT = '15vh';\r\nconst COLOR_SCHEME = {\r\n    2: '#f7f3e3',\r\n    4: '#fff4cc',\r\n    8: '#f9ca86',\r\n    16: '#f7ae47',\r\n    32: '#f29c71',\r\n    64: '#d3481d',\r\n    128: '#fff09b',\r\n    256: '#ffe85c',\r\n    512: '#ffd83f',\r\n    1024: '#ffd017',\r\n    2048: '#ffad16',\r\n    super: '#0094c8',\r\n}\r\n\r\nexport { \r\n    BLOCKS_IN_ONE_LINE, \r\n    BG_COLOR,\r\n    BG_BLOCK_COLOR,\r\n    GAME_NAME,\r\n    GAME_DESCRIPTION,\r\n    HEADER_HEIGHT,\r\n    COLOR_SCHEME,\r\n }","import React, { Fragment, useState, useEffect, } from 'react';\r\nimport './App.css';\r\nimport { GameContext } from './components/GameContext';\r\nimport Cookies from 'js-cookie';\r\nimport MainContainer from './components/MainContainer';\r\nimport Header from './components/Header';\r\nimport {\r\n  BLOCKS_IN_ONE_LINE,\r\n  BG_COLOR,\r\n  BG_BLOCK_COLOR,\r\n  GAME_NAME,\r\n  GAME_DESCRIPTION,\r\n  HEADER_HEIGHT,\r\n  COLOR_SCHEME,\r\n} from './GameConfig';\r\n\r\nfunction App() {\r\n\r\n  let cachedScore = Cookies.getJSON('score');\r\n  Cookies.set('BlocksPerLine', BLOCKS_IN_ONE_LINE, {path:'/'});\r\n\r\n  const [gameContext, setGameContext] = useState({\r\n    isGameOver: false,\r\n    score: cachedScore ? cachedScore : 0,\r\n    gameRestart: false,\r\n  });\r\n\r\n  //FIXME:update gamecontext.gamerestart\r\n  const [gameRestart, setGameRestart] = useState(false);\r\n  // useEffect( ()=>{\r\n  //   setGameRestart(true);\r\n  // });\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"App-header\">\r\n        <GameContext.Provider value={{ \r\n            context: gameContext, \r\n            setContext: setGameContext, \r\n            gameRestart: gameRestart, \r\n            setGameRestart: setGameRestart,\r\n            BLOCKS_IN_ONE_LINE,\r\n            BG_COLOR,\r\n            BG_BLOCK_COLOR,\r\n            GAME_NAME,\r\n            GAME_DESCRIPTION,\r\n            HEADER_HEIGHT,\r\n            COLOR_SCHEME,\r\n          }}>\r\n          <Header></Header>\r\n          <MainContainer></MainContainer>\r\n        </GameContext.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}