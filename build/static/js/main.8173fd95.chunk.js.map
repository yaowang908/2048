{"version":3,"sources":["components/GameContext.jsx","components/Menus.jsx","components/Block.jsx","functions/Blocks.jsx","functions/convertor.jsx","functions/generator.jsx","functions/move.jsx","functions/moveEventHandler.jsx","components/BlocksContainer.jsx","components/Grid.jsx","components/EndGameScreen.jsx","components/MainContainer.jsx","components/Header.jsx","GameConfig.jsx","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","MenuContainer","styled","div","_templateObject","GameLevelContainer","ul","_templateObject2","GameLevelItem","li","_templateObject3","Menus","props","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","useEffect","_useContext","useContext","dispatch","state","_useState3","_useState4","apllyGameLevel","level","e","gameLevelBtn","document","getElementById","firstChild","textContent","style","cssText","type","gameRestart","Cookies","set","path","gameLevel","isLevelUpdate","react_default","a","createElement","id","onClick","Button_default","variant","color","size","gameLevels","addEventListener","currentTop","top","concat","upOrDown","Number","split","scrollToGameLevel","deltaY","Block","position","setPosition","_useState5","COLOR_SCHEME","_useState6","setColor","num","height","left","lineHeight","textAlign","fontSize","fontWeight","backgroundColor","boxSizing","border","BG_COLOR","Blocks","data","setData","blockWidth","setBlockWidth","react","map","x","index","components_Block","key","BLOCKS_IN_ONE_LINE","convertor","result","subLevel","m","push","n","propTypes","PropTypes","arrayOf","shape","number","reverseConvertor","generator","twoDArray","dataCopy","toConsumableArray","resultTwoDArray","generatorWithTwoDArray","arguments","length","undefined","potentialPosition","topFloor","_generateNumber","generateNumber","_generateNumber2","num1","num2","_generatePosition","generatePosition","_generatePosition2","position1","position2","defaultProps","topFloorCheckLowest","pool","filter","sample","isRequired","sampleSize","moveHandler","eventType","isGameOver","score","console","log","A","i","thisArray","j","reverse","zip","apply","moveEventHandler","code","_moveHandler","_moveHandler2","newState","movementFailure","differenceWith","isEqual","Math","pow","shouldGameEnd","generatorOne","_moveHandler3","_moveHandler4","newStateUp","_moveHandler5","_moveHandler6","newStateDown","_moveHandler7","_moveHandler8","newStateLeft","_moveHandler9","_moveHandler10","newStateRight","diffBtwStatesUp","diffBtwStatesDown","diffBtwStatesLeft","diffBtwStatesRight","BlocksContainer","getJSON","initState","eventHandlerMiddleLayer","window","location","reload","removeEventListener","functions_Blocks","Grid","grids","gridHeight","setGridHeight","flexGrow","flexShrink","flexBasis","BG_BLOCK_COLOR","EndGame","display","zIndex","Container","MainContainer_templateObject","Main","MainContainer_templateObject2","SideHolder","MainContainer_templateObject3","MainContainer","minWidth","setLineHeight","setHeight","thisHeight","getComputedStyle","numThisHeight","_useState7","_useState8","swipeHandlers","useSwipeable","onSwipedLeft","onSwipedRight","onSwipedUp","onSwipedDown","trackMouse","EndGameScreen","innerWidth","innerHeight","className","components_BlocksContainer","components_Grid","components_Menus","HeaderContainer","Header_templateObject","Header","HEADER_HEIGHT","flex","maxWidth","flexDirection","justifyContent","GAME_NAME","GAME_DESCRIPTION","2","4","8","16","32","64","128","256","512","1024","2048","super","App","cachedScore","initContext","_useReducer","useReducer","action","objectSpread","_useReducer2","Provider","value","components_Header","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8173fd95.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const GameContext = createContext({});","import React, { useState, useEffect,useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\nimport Cookies from 'js-cookie';\nimport Button from '@material-ui/core/Button';\n\nconst MenuContainer = styled.div`\n    margin-top: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n`;\n\nconst GameLevelContainer = styled.ul`\n    width: 135px;\n    top: 0;\n    padding: 0;\n    margin: 0;\n    margin-top: 0;\n    position: absolute;\n    list-style: none;\n    text-align: center;\n    z-index: 100;\n    display: none;\n    transition: all 0.5s ease-in-out;\n`;\n\nconst GameLevelItem = styled.li`\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 10px;\n    border-bottom: 1px solid #f5f5f5;\n    cursor: pointer;\n`;\n\nconst Menus = function CreateBottomMenu(props) {\n    const [width, setWidth] = useState('400px');\n\n    useEffect( () => {\n        setWidth(props.width);\n    }, [props.width] );\n\n    // const { gameRestart, setGameRestart  } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n    const [ isOpen, setIsOpen ] = useState(false);\n\n    function restartGame() {\n        dispatch({type:'restart', gameRestart: true});\n        Cookies.set('score',0, {path:'/'});\n    }\n\n    function setGameLevel() { \n        const gameLevelBtn = document.getElementById('game-level-btn');\n        gameLevelBtn.firstChild.textContent = \"\";\n        gameLevelBtn.firstChild.style.width= \"103px\";\n\n        const gameLevels = document.getElementById('game-levels');\n        gameLevels.style.cssText = 'display: block';\n\n        gameLevels.addEventListener('wheel',(e)=>{\n            let currentTop = gameLevels.style.top;\n            gameLevels.style.cssText = `top: ${scrollToGameLevel(currentTop, e.deltaY)}px; display: block`;\n        });\n\n        function scrollToGameLevel(top, upOrDown) {\n            const currentTop = Number(top.split('px')[0]); \n            if (upOrDown>0) {\n                //goUP\n                if (currentTop >= -48) {\n                    return currentTop - 48;\n                }\n                return currentTop;\n            } else if (upOrDown<0) {\n                //goDown\n                if (currentTop <= -48) {\n                    return currentTop + 48;\n                }\n                return currentTop;\n            }\n        }\n    }\n\n    function apllyGameLevel(level) {\n        \n        return (e)=>{\n            const gameLevelBtn = document.getElementById('game-level-btn');\n            gameLevelBtn.firstChild.textContent = \"GAME LEVEL\";\n            gameLevelBtn.firstChild.style.width = \"auto\";\n            const gameLevels = document.getElementById('game-levels');\n            gameLevels.style.cssText = 'display: none';\n\n            dispatch({ type: 'restart', gameRestart: true });\n            Cookies.set('score', 0, { path: '/' });\n            dispatch({ type: 'setGameLevel', gameLevel: level});\n            dispatch({ type: 'isLevelUpdate', isLevelUpdate: true});\n        };\n    }\n\n    return(\n        <MenuContainer style={{ 'width':width }}>\n            <GameLevelContainer id=\"game-levels\">\n                <GameLevelItem onClick={apllyGameLevel(4)}>4x4</GameLevelItem>\n                <GameLevelItem onClick={apllyGameLevel(5)}>5x5</GameLevelItem>\n                <GameLevelItem onClick={apllyGameLevel(10)}>10x10</GameLevelItem>\n            </GameLevelContainer>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" id='game-level-btn' onClick={setGameLevel}>GAME LEVEL</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={restartGame}>RESTART</Button>\n        </MenuContainer>      \n    );\n}\n\nMenus.propTypes = {\n    width: PropTypes.string.isRequired,\n}\n\nexport default Menus;","import React, { useState, useEffect, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Block = function indivitualBlock(props) {\n    // const { COLOR_SCHEME, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const [width, setWidth] = useState(0);\n    useEffect( () => {\n        setWidth(props.width);\n    },[props.width]);\n\n    const [position, setPosition] = useState(props.position);\n    useEffect( () => {\n        setPosition(props.position);\n    },[props.position]);\n\n    const [color, setColor] = useState(state.COLOR_SCHEME[2]);\n    useEffect( () => {\n        if (!!state.COLOR_SCHEME[props.num]) setColor(state.COLOR_SCHEME[props.num]);\n    },[props.num]);\n\n    return(\n        <div style={{\n            'width': width+'px',\n            'height': width + 'px',\n            'position': 'absolute',\n            'left': (position[0] * width) + 'px',\n            'top': (position[1] * width) + 'px',\n            'lineHeight': (width - 20) + 'px',\n            'textAlign': 'center',\n            'color': props.num>256 ? '#f2f2f2' : '#000',\n            'fontSize': props.gameLevel<10? (props.num>64 ? '2rem' : '2.5rem'): '0.8rem',\n            'fontWeight': 'bold',\n            'backgroundColor': color,\n            'boxSizing': 'border-box',\n            'border': '10px solid ' + state.BG_COLOR,\n        }}>\n            {props.num}\n        </div>\n    );\n}\n\nBlock.propTypes = {\n    num: PropTypes.number.isRequired,\n    position: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n}\n\nexport default Block;","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport {GameContext} from '../components/GameContext';\nimport PropTypes from 'prop-types';\nimport Block from '../components/Block';\n\nconst Blocks = function drawAllBlocks(props) {\n    const { state, dispatch } = useContext(GameContext);\n\n    const [data,setData] = useState(props.data);\n    useEffect(() => {\n        setData(props.data);\n    },[props.data]);\n\n    const [blockWidth, setBlockWidth] = useState(props.blockWidth);\n    useEffect(() => {\n        setBlockWidth(props.blockWidth);\n    },[props.blockWidth]);\n\n    return(\n        <Fragment>\n            {data.map((x, index)=>{\n                return <Block num={x.num} key={index} position={x.position} width={blockWidth} gameLevel={state.BLOCKS_IN_ONE_LINE}></Block>\n            })}\n        </Fragment>\n    );\n}\n\nBlocks.propTypes = {\n    data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    position: PropTypes.arrayOf(PropTypes.number),\n                    num: PropTypes.number,\n                })\n            ),\n    blockWidth: PropTypes.number,\n}\n\nexport default Blocks;","import PropTypes from 'prop-types';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst convertor = function convertObjectArrayToTwoDimentionArray(data, BLOCKS_IN_ONE_LINE) {\n    let result = [];\n    let subLevel = [];\n    for(let m=0; m<BLOCKS_IN_ONE_LINE; m+=1) {\n        subLevel.push(0);\n    }\n    for(let n=0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n        result.push([...subLevel]);\n    }\n    if(!data) return result;\n\n    data.map(x => {\n        result[x.position[0]][x.position[1]] = x.num;\n    });\n\n    return result;\n}\n\nconvertor.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n    ),\n}\n\nconst reverseConvertor = function (data, BLOCKS_IN_ONE_LINE) {\n    let result = [];\n\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n < BLOCKS_IN_ONE_LINE; n += 1) {\n            if(data[m][n]) {\n                result.push({\n                    position: [m,n],\n                    num: data[m][n],\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\nreverseConvertor.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport { convertor, reverseConvertor };","import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';import sample from 'lodash/sample';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport sampleSize from 'lodash/sampleSize';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst generator = function generatorTwoNodesRandomly(data, BLOCKS_IN_ONE_LINE) {\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n    const dataCopy = [...twoDArray];\n    \n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 2, BLOCKS_IN_ONE_LINE);\n     \n    // if (!resultTwoDArray) return false;\n\n    const result = reverseConvertor(resultTwoDArray, BLOCKS_IN_ONE_LINE);\n    return result;\n}\n\nconst generatorOne = function generatorOneNodeRandomly(data, BLOCKS_IN_ONE_LINE) {\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n    const dataCopy = [...twoDArray];\n\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 1, BLOCKS_IN_ONE_LINE);\n\n    if (!resultTwoDArray) return false;\n    const result = reverseConvertor(resultTwoDArray, BLOCKS_IN_ONE_LINE);\n    return result;\n}\n\nconst generatorWithTwoDArray = function (data, size = 2, BLOCKS_IN_ONE_LINE) {\n    let potentialPosition = [];\n    let topFloor = 0;\n    let dataCopy = [...data];\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n            if(!dataCopy) dataCopy = 0;\n        }\n    }\n    for (let m = 0; m < dataCopy.length; m += 1) {\n        for (let n = 0; n < dataCopy[m].length; n += 1) {\n            if (dataCopy[m][n] > topFloor) topFloor = dataCopy[m][n];\n            if(!dataCopy[m][n]) potentialPosition.push([m, n]);\n        }\n    }\n\n    // if no more spaces then !!failed!!\n    if (potentialPosition.length === 0) return false;\n\n    if (size === 2) {\n        const [num1, num2] = generateNumber(topFloor);\n        const [position1, position2] = generatePosition(potentialPosition);\n\n        dataCopy[position1[0]][position1[1]] = num1;\n        dataCopy[position2[0]][position2[1]] = num2;\n\n        return dataCopy;\n    } \n\n    const num = generateNumber(topFloor, 1);\n    const position = generatePosition(potentialPosition, 1);\n    dataCopy[position[0]][position[1]] = num;\n    return dataCopy;\n}\n\ngenerator.defaultProps = {\n    data: [],\n};\n\n// {\n//     position: [3,3],\n//     num: 8\n// }\ngenerator.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n        ),\n    }\n    \n/**\n * @param {num} topFloor indicates current biggest number on plate  \n */\nconst generateNumber = function (topFloor, size = 2) {\n    let topFloorCheckLowest = 2;\n    if( topFloor > 2 ) topFloorCheckLowest = topFloor; \n    const pool = [2, 4, 8, 16, 32].filter(x=> x <= topFloorCheckLowest);\n    const num1 = sample(pool);\n    const num2 = sample(pool);\n    if (size === 2) return [num1,num2];\n    return num1;\n}\n\ngenerateNumber.propTypes = {\n    topFloor : PropTypes.number.isRequired,\n}\n\nconst generatePosition = function (potentialPosition, size = 2) {\n    if (size === 2) {\n        const result = sampleSize(potentialPosition, 2);\n        return result;    \n    } \n    const result = sample(potentialPosition);\n    return result;\n}\n\ngeneratePosition.propTypes = {\n    potentialPosition: PropTypes.arrayOf(\n        PropTypes.arrayOf(PropTypes.number)\n    ).isRequired,\n}\n\nexport { generator, generatorOne, generatorWithTwoDArray };","// import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport zip from 'lodash/zip';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst moveHandler = function listenToKeyboardAndRecieveDataAndReturnMutated(eventType, data, isGameOver = false, score = 0, BLOCKS_IN_ONE_LINE) {\n    if(isGameOver) return data;\n\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n\n    if( eventType === 'ArrowDown' ) {\n        console.log('ArrowDown')\n        // check every block, see if it should move\n        // set attribute to those should move\n        // and ONLY first couple got collapsed\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE-1; i>=0; i-=1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE-1; j>=0; j-=1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m=0; m<thisArray.length-1; m+=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m+1];\n                    thisArray[m+1] = 0;\n                }\n                if (thisArray[m] === thisArray[m+1]) {\n                    thisArray[m] = (thisArray[m]+thisArray[m+1]);\n                    thisArray[m+1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n                // A[i][BLOCKS_IN_ONE_LINE-1-m] = thisArray[m];\n            }\n            thisArray.length = BLOCKS_IN_ONE_LINE;//fill thisArray with undefined to length to BLOCKS_IN_ONE_LINE\n            for (let n=0; n<thisArray.length; n+=1) {\n                if(!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }// end of move down\n\n        return [reverseConvertor(A, BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowUp') {\n        console.log('ArrowUp')\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = thisArray.length - 1; m >0; m-=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m - 1];\n                    thisArray[m - 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m - 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m - 1]);\n                    thisArray[m - 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = thisArray.length -1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [reverseConvertor(A, BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowLeft') {\n        console.log('ArrowLeft')\n        //transposing\n        let A = zip(...twoDArray);\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = 0; j <= BLOCKS_IN_ONE_LINE - 1; j += 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            \n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray;\n        }\n        return [reverseConvertor(zip(...A), BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowRight') {\n        console.log('ArrowRight')\n        //transposing\n        let A = zip(...twoDArray);\n\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [reverseConvertor(zip(...A), BLOCKS_IN_ONE_LINE), score ];\n    }\n}\n\n// moveHandler.propTypes = {\n//     eventType: PropTypes.string.isRequired,\n//     data: PropTypes.arrayOf(\n//             PropTypes.shape({\n//                 position: PropTypes.arrayOf(PropTypes.number),\n//                 num: PropTypes.number,\n//             })\n//         ),\n//     isGameOver: PropTypes.bool,\n//     score: PropTypes.number.isRequired,\n// }\n\nexport default moveHandler;","import differenceWith from 'lodash/differenceWith';\nimport isEqual from 'lodash/isEqual';\nimport Cookies from 'js-cookie';\nimport { generator, generatorOne } from '../functions/generator';\nimport moveHandler from '../functions/move';\n\n\n//move blocks \nconst moveEventHandler = function eventHandler(e, state, dispatch, data, setData) {\n    console.log(e);\n    if (\n        e.code !== 'ArrowDown'\n        && e.code !== 'ArrowUp'\n        && e.code !== 'ArrowLeft'\n        && e.code !== 'ArrowRight'\n    ) { return; }\n    if (state.isGameOver) return;\n    let [newState, score] = moveHandler(e.code, data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n\n    // setContext({ score: state.score + score});\n    dispatch({ type: \"updateScore\", score: score });\n    Cookies.set('score', state.score + score, { path: '' });\n\n    let movementFailure = false;\n\n    let diffBtwStates = differenceWith(newState, data, isEqual)\n    if (!diffBtwStates.length) movementFailure = true;\n\n    // if no node are moved, should NOT generator new node\n    if (!movementFailure) {\n        newState = generatorOne(newState, state.BLOCKS_IN_ONE_LINE);\n        if (!!newState) {\n            setData(newState);\n            Cookies.set('data', newState, { path: '' });\n        } else {\n            // setContext({isGameOver: true});\n            dispatch({ type: \"gameOver\", isGameOver: true });\n            Cookies.set('data', newState, { path: '' });\n        }\n    } else {\n        const maxBlocksNum = state.BLOCKS_IN_ONE_LINE ** 2;\n\n        if (maxBlocksNum === newState.length && shouldGameEnd(data,state)) {\n            // setContext({ isGameOver: true });\n            dispatch({ type: \"gameOver\", isGameOver: true });\n            Cookies.set('data', [], { path: '' });\n            Cookies.set('score', 0, { path: '' });\n        }\n    }\n    //if no space to create new node then GAME OVER\n}\n\n//check possible step\nconst shouldGameEnd = function tryFourDirectionFindPossibleStep(data, state) {\n    let [newStateUp, scoreUp] = moveHandler(\"ArrowUp\", data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n    let [newStateDown, scoreDown] = moveHandler(\"ArrowDown\", data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n    let [newStateLeft, scoreLeft] = moveHandler(\"ArrowLeft\", data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n    let [newStateRight, scoreRight] = moveHandler(\"ArrowRight\", data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n\n    let diffBtwStatesUp = differenceWith(newStateUp, data, isEqual);\n    let diffBtwStatesDown = differenceWith(newStateDown, data, isEqual);\n    let diffBtwStatesLeft = differenceWith(newStateLeft, data, isEqual);\n    let diffBtwStatesRight = differenceWith(newStateRight, data, isEqual);\n\n    if (\n        !diffBtwStatesUp.length\n        && !diffBtwStatesDown.length\n        && !diffBtwStatesLeft.length\n        && !diffBtwStatesRight.length\n        ) {\n            return true;\n        }\n\n    return false;\n}\n\nexport { moveEventHandler } ","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Blocks from '../functions/Blocks';\nimport { generator, generatorOne } from '../functions/generator';\nimport Cookies from 'js-cookie';\nimport { moveEventHandler } from '../functions/moveEventHandler';\nimport { GameContext } from './GameContext';\n\nconst BlocksContainer = function groupAllBlocksTogether(props) {\n    // const { BLOCKS_IN_ONE_LINE } = useContext(GameContext);\n    // const { context, setContext } = useContext(GameContext);\n    // const { gameRestart, setGameRestart } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n\n    if (!Cookies.getJSON('data')) Cookies.set('data',[], {path: ''});\n    const initState = ((Cookies.getJSON('data') && Cookies.getJSON('data').length === 0)) ? generator([], state.BLOCKS_IN_ONE_LINE) : Cookies.getJSON('data');\n    \n    const [data, setData] = useState(initState);\n    \n\n    if (state.gameRestart) {\n        Cookies.set('data', [], {path:'/'});\n        Cookies.set('BlocksPerLine', state.BLOCKS_IN_ONE_LINE, { path: '/' });\n        window.location.reload(false);\n    };\n\n    function eventHandlerMiddleLayer(e) {\n        return moveEventHandler(e, state, dispatch, data, setData);\n    }\n    \n    //add keyboard listener\n    useEffect(() => {\n        if (state.isLevelUpdate) {\n            setData(generator([], state.BLOCKS_IN_ONE_LINE));\n            dispatch({type:'isLevelUpdate',isLevelUpdate:false});\n        }\n        if( !state.isGameOver) {\n            window.addEventListener('keydown', eventHandlerMiddleLayer);\n        }\n        return () => {\n            window.removeEventListener('keydown', eventHandlerMiddleLayer)\n        };\n    });\n\n    useEffect( ()=>{\n        setData(props.data);\n    },[props.data]);\n\n    return (\n        <div style={{ 'position': 'absolute' }}>\n            <Blocks\n                data={data}\n                blockWidth={props.blockWidth}\n            ></Blocks>\n        </div>\n    );\n}\n\nBlocksContainer.defaultProps = {\n    blockWidth: 120,\n}\n\nBlocksContainer.propTypes = {\n    blockWidth : PropTypes.number.isRequired,\n    data: PropTypes.array,//update when swipe\n};\n\nexport default BlocksContainer;","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Grid = function getGrid(props) {\n    // const { BLOCKS_IN_ONE_LINE, BG_BLOCK_COLOR, BG_COLOR } = useContext(GameContext);\n    const {state,dispatch} = useContext(GameContext);\n\n    let grids = [];\n    for (let i = 0; i < state.BLOCKS_IN_ONE_LINE ** 2; i++) {\n        grids.push(i);\n    }\n\n    const [ gridHeight, setGridHeight ] = useState(props.gridHeight);\n    useEffect( ()=>{\n        setGridHeight(props.gridHeight);\n    }, [props.gridHeight]);\n\n    return (\n        <Fragment>\n            {\n                grids.map(x => {\n                    return <div key={x} \n                            id={'grid_' + x} \n                            style={{    \n                                        'height': gridHeight, \n                                        'width': gridHeight,\n                                        'flexGrow': '1',\n                                        'flexShrink': '1',\n                                        'flexBasis': gridHeight,\n                                        'backgroundColor': state.BG_BLOCK_COLOR,\n                                        'border': '10px solid ' + state.BG_COLOR,\n                                        'boxSizing': 'border-box',\n                                                }}>\n                            </div>\n                })\n            }\n        </Fragment>\n    );\n}\n\nGrid.propTypes = {\n    gridHeight: PropTypes.string.isRequired,\n}\n\nexport default Grid;","import React, { useContext } from 'react';\nimport { GameContext } from './GameContext';\nimport PropTypes from 'prop-types';\nimport Cookies from 'js-cookie';\nimport Button from '@material-ui/core/Button';\n\nconst EndGame = function endGameScreen( props ) {\n    // const { context, } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    function restartGame() {\n        dispatch({ type: 'restart', gameRestart: true });\n        Cookies.set('score', 0, { path: '/' });\n    }\n\n    return (\n        <div style={{\n            'width': props.width,\n            'height': props.height,\n            'fontSize': '4rem',\n            'backgroundColor': 'rgba(16,17,20,0.8)',\n            'textAlign': 'center',\n            'lineHeight': props.height,\n            'position': 'absolute',\n            'display': state.isGameOver ? 'block' : 'none',\n            'zIndex': '1000',\n        }}>\n            <span>GAME    </span>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={restartGame}>RESTART</Button>\n            <span>    OVER</span>\n        </div>\n    );\n}\n\nEndGame.propTypes = {\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n}\n\nexport default EndGame;","import React, {  Fragment, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n\n// import { BLOCKS_IN_ONE_LINE, BG_COLOR, } from '../GameConfig';\nimport Menus from './Menus';\nimport BlocksContainer from './BlocksContainer';\nimport Grid from './Grid';\nimport EndGame from './EndGameScreen';\nimport { GameContext } from './GameContext';\nimport { useSwipeable } from 'react-swipeable';\nimport { moveEventHandler } from '../functions/moveEventHandler';\nimport Cookies from 'js-cookie';\nimport { generator, generatorOne } from '../functions/generator';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nconst Main = styled.div`\n    flex:2 1 0;\n    min-width: 400px;\n    max-width: 500px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 10px;\n    box-sizing: content-box;\n    position: relative;\n`;\n\nconst SideHolder = styled.div`\n    flex: 1 1 auto;\n    display: flex;\n`;\n\nconst MainContainer = function MainPlayGround() {\n    // const { BLOCKS_IN_ONE_LINE, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const minWidth = 400;\n    const [lineHeight, setLineHeight] = useState('0');\n    const [gridHeight, setGridHeight] = useState('0');\n    useEffect(()=>{\n        setHeight();\n        window.addEventListener('resize',setHeight);\n        return(()=>{\n            window.removeEventListener('resize',setHeight);\n        });\n    });\n    \n    function setHeight() {\n        let thisHeight = window.getComputedStyle(document.getElementById('mainHolder')).width;\n        let numThisHeight = Number(thisHeight.split('px')[0]);\n        thisHeight = numThisHeight < minWidth ? minWidth : numThisHeight;\n        let gridHeight = thisHeight / state.BLOCKS_IN_ONE_LINE;\n        setGridHeight(gridHeight);\n        setLineHeight(thisHeight);\n    }\n  \n    const [blockWidth, setBlockWidth] = useState(Number(gridHeight));\n    useEffect( ()=>{ \n        setBlockWidth(Number(gridHeight));\n    }, [gridHeight]);\n\n    if (!Cookies.getJSON('data')) Cookies.set('data', [], { path: '' });\n    const initState = ((Cookies.getJSON('data') && Cookies.getJSON('data').length === 0)) ? generator([], state.BLOCKS_IN_ONE_LINE) : Cookies.getJSON('data');\n    const [data, setData] = useState(initState);\n    //touch screen handlers\n    const swipeHandlers = useSwipeable({\n        onSwipedLeft: () => { console.log('left'); moveEventHandler({code: 'ArrowLeft'}, state, dispatch, data, setData) },\n        onSwipedRight: () => { console.log('right'); moveEventHandler({ code: 'ArrowRight' }, state, dispatch, data, setData) },\n        onSwipedUp: () => { console.log('up'); moveEventHandler({ code: 'ArrowUp' }, state, dispatch, data, setData) },\n        onSwipedDown: () => { console.log('down'); moveEventHandler({ code: 'ArrowDown' }, state, dispatch, data, setData) },\n        // preventDefaultTouchmoveEvent: false,\n        trackMouse: true,\n    });\n\n    return (\n        <Fragment>\n                <EndGame width={window.innerWidth+'px'} height={window.innerHeight+'px'}></EndGame>\n                <Container  {...swipeHandlers}>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                    <Main id={'mainHolder'} style={{ 'height': lineHeight + 'px', 'backgroundColor': state.BG_COLOR}}>\n                        <BlocksContainer blockWidth={ blockWidth } data={data}></BlocksContainer>\n                        <Grid gridHeight={gridHeight+'px'}></Grid>\n                        <Menus width={lineHeight+'px'}></Menus>\n\n                    </Main>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                </Container>  \n        </Fragment>\n    );\n}\n\nexport default MainContainer;","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\n\nconst HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 10px 0px;\n`;\n\n// flex - shrink: 1;\n// flex - basis: 0;\nconst Header = function headerContainsScoreAndDescription() {\n    // const { GAME_NAME, GAME_DESCRIPTION, HEADER_HEIGHT, COLOR_SCHEME } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    // const { context, setContext } = useContext(GameContext);\n\n    return(\n        <HeaderContainer style={{ 'height': state.HEADER_HEIGHT}}>\n            <div style={{ 'flex': '1 1 auto' }}></div>\n            <div style={{ \n                        'flex': '2 1 0', \n                        'display': 'flex',\n                        'minWidth': '400px',\n                        'maxWidth': '500px', \n                    }}>\n                <div style={{ \n                        'flex': '1 1 auto',\n                        'textAlign': 'left', \n                        'display': 'flex',\n                        'flexDirection': 'column',\n                        'justifyContent': 'center',\n                    'height': state.HEADER_HEIGHT,\n                        'maxWidth': '50%',\n                    }}>\n                    <div style={{\n                        'flex': '2 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '3rem',\n                        'fontWeight': 'bold',\n                    }}>\n                        {state.GAME_NAME}                   \n                    </div>\n                    <div style={{\n                        'flex': '1 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '0.8rem',\n                    }}>\n                        {state.GAME_DESCRIPTION}\n                    </div>\n                </div>\n                <div style={{ 'flex': '1 1 auto', 'color': state.COLOR_SCHEME[128] }}>\n                    <h1>{state.score}</h1>\n                </div>\n            </div>\n            <div style={{ 'flex':'1 1 auto' }}></div>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","const BLOCKS_IN_ONE_LINE = 5;\nconst BG_COLOR = 'rgba(136, 129, 107, 1)';\nconst BG_BLOCK_COLOR = 'rgba(210, 207, 207, 0.8)';\nconst GAME_NAME = '2048+';\nconst GAME_DESCRIPTION = 'Join those numbers and get as big as you can, 2048 is not the end!';\nconst HEADER_HEIGHT = '15vh';\nconst COLOR_SCHEME = {\n    2: '#f7f3e3',\n    4: '#fff4cc',\n    8: '#f9ca86',\n    16: '#f7ae47',\n    32: '#f29c71',\n    64: '#d3481d',\n    128: '#fff09b',\n    256: '#ffe85c',\n    512: '#ffd83f',\n    1024: '#ffd017',\n    2048: '#ffad16',\n    super: '#0094c8',\n}\n\nexport { \n    BLOCKS_IN_ONE_LINE, \n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n }","import React, { Fragment, useState, useEffect, useReducer} from 'react';\nimport './App.css';\nimport { GameContext } from './components/GameContext';\nimport Cookies from 'js-cookie';\nimport MainContainer from './components/MainContainer';\nimport Header from './components/Header';\nimport {\n  BLOCKS_IN_ONE_LINE,\n  BG_COLOR,\n  BG_BLOCK_COLOR,\n  GAME_NAME,\n  GAME_DESCRIPTION,\n  HEADER_HEIGHT,\n  COLOR_SCHEME,\n} from './GameConfig';\n\nfunction App() {\n\n  let cachedScore = Cookies.getJSON('score');\n\n  if (!Cookies.getJSON('BlocksPerLine')) {\n    Cookies.set('BlocksPerLine', BLOCKS_IN_ONE_LINE, {path:'/'});\n  }\n\n  let reducer = (state, action) => {\n    switch(action.type) {\n      case \"gameOver\":\n        return {...state, isGameOver: action.isGameOver};\n      case \"updateScore\":\n        return {...state, score: action.score};\n      case \"restart\":\n        return {...state, gameRestart: action.gameRestart};\n      case \"setGameLevel\":\n        return { ...state, BLOCKS_IN_ONE_LINE: action.gameLevel};\n      case \"isLevelUpdate\":\n        return {...state, isLevelUpdate: action.isLevelUpdate};\n      default:\n        return;\n    }\n  }\n\n  // const [gameContext, setGameContext] = useState({\n  //   isGameOver: false,\n  //   score: cachedScore ? cachedScore : 0,\n  //   gameRestart: false,\n  // });\n\n  const initContext = {\n    isGameOver: false,\n    score: cachedScore ? cachedScore : 0,\n    gameRestart: false,\n    isLevelUpdate: false,\n    BLOCKS_IN_ONE_LINE: Cookies.getJSON('BlocksPerLine') ? Cookies.getJSON('BlocksPerLine') : BLOCKS_IN_ONE_LINE ,\n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n  }\n\n  const [state, dispatch] = useReducer(reducer, initContext);\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <GameContext.Provider value={{state, dispatch}}>\n          <Header></Header>\n          <MainContainer></MainContainer>\n        </GameContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}