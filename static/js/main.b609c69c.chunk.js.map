{"version":3,"sources":["components/GameContext.jsx","components/Menus.jsx","components/Block.jsx","functions/Blocks.jsx","functions/convertor.jsx","functions/move.jsx","functions/generator.jsx","components/BlocksContainer.jsx","components/Grid.jsx","components/EndGameScreen.jsx","components/MainContainer.jsx","components/Header.jsx","GameConfig.jsx","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","MenuContainer","styled","div","_templateObject","GameLevelContainer","ul","_templateObject2","GameLevelItem","li","_templateObject3","Menus","props","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","useEffect","_useContext","useContext","dispatch","state","_useState3","_useState4","apllyGameLevel","level","e","gameLevelBtn","document","getElementById","firstChild","textContent","style","cssText","type","gameRestart","gameLevel","isLevelUpdate","react_default","a","createElement","id","onClick","Button_default","variant","color","size","gameLevels","addEventListener","currentTop","top","concat","upOrDown","Number","split","scrollToGameLevel","deltaY","Cookies","set","path","Block","position","setPosition","_useState5","COLOR_SCHEME","_useState6","setColor","num","height","left","lineHeight","textAlign","fontSize","fontWeight","backgroundColor","boxSizing","border","BG_COLOR","Blocks","data","setData","blockWidth","setBlockWidth","react","map","x","index","components_Block","key","BLOCKS_IN_ONE_LINE","convertor","result","subLevel","m","push","n","propTypes","PropTypes","arrayOf","shape","number","reverseConvertor","moveHandler","eventType","isGameOver","arguments","length","undefined","score","twoDArray","console","log","A","toConsumableArray","i","thisArray","j","reverse","zip","apply","generator","dataCopy","resultTwoDArray","generatorWithTwoDArray","generatorOne","potentialPosition","topFloor","_generateNumber","generateNumber","_generateNumber2","num1","num2","_generatePosition","generatePosition","_generatePosition2","position1","position2","defaultProps","topFloorCheckLowest","pool","filter","sample","isRequired","sampleSize","BlocksContainer","getJSON","initState","eventHandler","code","_moveHandler","_moveHandler2","newState","movementFailure","differenceWith","isEqual","Math","pow","window","location","reload","removeEventListener","functions_Blocks","Grid","grids","gridHeight","setGridHeight","flexGrow","flexShrink","flexBasis","BG_BLOCK_COLOR","EndGame","display","zIndex","Container","MainContainer_templateObject","Main","MainContainer_templateObject2","SideHolder","MainContainer_templateObject3","MainContainer","minWidth","setLineHeight","setHeight","thisHeight","getComputedStyle","numThisHeight","EndGameScreen","innerWidth","innerHeight","className","components_BlocksContainer","components_Grid","components_Menus","HeaderContainer","Header_templateObject","Header","HEADER_HEIGHT","flex","maxWidth","flexDirection","justifyContent","GAME_NAME","GAME_DESCRIPTION","2","4","8","16","32","64","128","256","512","1024","2048","super","App","cachedScore","initContext","_useReducer","useReducer","action","objectSpread","_useReducer2","Provider","value","components_Header","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b609c69c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const GameContext = createContext({});","import React, { useState, useEffect,useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\nimport Cookies from 'js-cookie';\n\nimport Button from '@material-ui/core/Button';\n\nconst MenuContainer = styled.div`\n    margin-top: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n`;\n\nconst GameLevelContainer = styled.ul`\n    width: 135px;\n    top: 0;\n    padding: 0;\n    margin: 0;\n    margin-top: 0;\n    position: absolute;\n    list-style: none;\n    text-align: center;\n    z-index: 100;\n    display: none;\n    transition: all 0.5s ease-in-out;\n`;\n\nconst GameLevelItem = styled.li`\n    font-size: 1rem;\n    font-weight: bold;\n    padding: 10px;\n    border-bottom: 1px solid #f5f5f5;\n    cursor: pointer;\n`;\n\nconst Menus = function CreateBottomMenu(props) {\n    const [width, setWidth] = useState('400px');\n\n    useEffect( () => {\n        setWidth(props.width);\n    }, [props.width] );\n\n    // const { gameRestart, setGameRestart  } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n    const [ isOpen, setIsOpen ] = useState(false);\n\n    function restartGame() {\n        dispatch({type:'restart', gameRestart: true});\n        Cookies.set('score',0, {path:'/'});\n    }\n\n    function setGameLevel() { \n        const gameLevelBtn = document.getElementById('game-level-btn');\n        gameLevelBtn.firstChild.textContent = \"\";\n        gameLevelBtn.firstChild.style.width= \"103px\";\n\n        const gameLevels = document.getElementById('game-levels');\n        gameLevels.style.cssText = 'display: block';\n\n        gameLevels.addEventListener('wheel',(e)=>{\n            let currentTop = gameLevels.style.top;\n            gameLevels.style.cssText = `top: ${scrollToGameLevel(currentTop, e.deltaY)}px; display: block`;\n        });\n\n        function scrollToGameLevel(top, upOrDown) {\n            const currentTop = Number(top.split('px')[0]); \n            if (upOrDown>0) {\n                //goUP\n                if (currentTop >= -48) {\n                    return currentTop - 48;\n                }\n                return currentTop;\n            } else if (upOrDown<0) {\n                //goDown\n                if (currentTop <= -48) {\n                    return currentTop + 48;\n                }\n                return currentTop;\n            }\n        }\n    }\n\n    function apllyGameLevel(level) {\n        \n        return (e)=>{\n            const gameLevelBtn = document.getElementById('game-level-btn');\n            gameLevelBtn.firstChild.textContent = \"GAME LEVEL\";\n            gameLevelBtn.firstChild.style.width = \"auto\";\n            const gameLevels = document.getElementById('game-levels');\n            gameLevels.style.cssText = 'display: none';\n\n            dispatch({ type: 'restart', gameRestart: true });\n            dispatch({ type: 'setGameLevel', gameLevel: level});\n            dispatch({ type: 'isLevelUpdate', isLevelUpdate: true});\n        };\n    }\n\n    return(\n        <MenuContainer style={{ 'width':width }}>\n            <GameLevelContainer id=\"game-levels\">\n                <GameLevelItem onClick={apllyGameLevel(4)}>4x4</GameLevelItem>\n                <GameLevelItem onClick={apllyGameLevel(5)}>5x5</GameLevelItem>\n                <GameLevelItem onClick={apllyGameLevel(10)}>10x10</GameLevelItem>\n            </GameLevelContainer>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" id='game-level-btn' onClick={setGameLevel}>GAME LEVEL</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={restartGame}>RESTART</Button>\n        </MenuContainer>      \n    );\n}\n\nMenus.propTypes = {\n    width: PropTypes.string.isRequired,\n}\n\nexport default Menus;","import React, { useState, useEffect, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Block = function indivitualBlock(props) {\n    // const { COLOR_SCHEME, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const [width, setWidth] = useState(0);\n    useEffect( () => {\n        setWidth(props.width);\n    },[props.width]);\n\n    const [position, setPosition] = useState(props.position);\n    useEffect( () => {\n        setPosition(props.position);\n    },[props.position]);\n\n    const [color, setColor] = useState(state.COLOR_SCHEME[2]);\n    useEffect( () => {\n        if (!!state.COLOR_SCHEME[props.num]) setColor(state.COLOR_SCHEME[props.num]);\n    },[props.num]);\n\n    return(\n        <div style={{\n            'width': width+'px',\n            'height': width + 'px',\n            'position': 'absolute',\n            'left': (position[0] * width) + 'px',\n            'top': (position[1] * width) + 'px',\n            'lineHeight': (width - 20) + 'px',\n            'textAlign': 'center',\n            'color': props.num>256 ? '#f2f2f2' : '#000',\n            'fontSize': props.gameLevel<10? (props.num>64 ? '2rem' : '2.5rem'): '0.8rem',\n            'fontWeight': 'bold',\n            'backgroundColor': color,\n            'boxSizing': 'border-box',\n            'border': '10px solid ' + state.BG_COLOR,\n        }}>\n            {props.num}\n        </div>\n    );\n}\n\nBlock.propTypes = {\n    num: PropTypes.number.isRequired,\n    position: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n}\n\nexport default Block;","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport {GameContext} from '../components/GameContext';\nimport PropTypes from 'prop-types';\nimport Block from '../components/Block';\n\nconst Blocks = function drawAllBlocks(props) {\n    const { state, dispatch } = useContext(GameContext);\n\n    const [data,setData] = useState(props.data);\n    useEffect(() => {\n        setData(props.data);\n    },[props.data]);\n\n    const [blockWidth, setBlockWidth] = useState(props.blockWidth);\n    useEffect(() => {\n        setBlockWidth(props.blockWidth);\n    },[props.blockWidth]);\n\n    return(\n        <Fragment>\n            {data.map((x, index)=>{\n                return <Block num={x.num} key={index} position={x.position} width={blockWidth} gameLevel={state.BLOCKS_IN_ONE_LINE}></Block>\n            })}\n        </Fragment>\n    );\n}\n\nBlocks.propTypes = {\n    data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    position: PropTypes.arrayOf(PropTypes.number),\n                    num: PropTypes.number,\n                })\n            ),\n    blockWidth: PropTypes.number,\n}\n\nexport default Blocks;","import PropTypes from 'prop-types';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst convertor = function convertObjectArrayToTwoDimentionArray(data, BLOCKS_IN_ONE_LINE) {\n    let result = [];\n    let subLevel = [];\n    for(let m=0; m<BLOCKS_IN_ONE_LINE; m+=1) {\n        subLevel.push(0);\n    }\n    for(let n=0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n        result.push([...subLevel]);\n    }\n    if(!data) return result;\n\n    data.map(x => {\n        result[x.position[0]][x.position[1]] = x.num;\n    });\n\n    return result;\n}\n\nconvertor.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n    ),\n}\n\nconst reverseConvertor = function (data, BLOCKS_IN_ONE_LINE) {\n    let result = [];\n\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n < BLOCKS_IN_ONE_LINE; n += 1) {\n            if(data[m][n]) {\n                result.push({\n                    position: [m,n],\n                    num: data[m][n],\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\nreverseConvertor.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport { convertor, reverseConvertor };","// import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport zip from 'lodash/zip';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst moveHandler = function listenToKeyboardAndRecieveDataAndReturnMutated(eventType, data, isGameOver = false, score = 0, BLOCKS_IN_ONE_LINE) {\n    if(isGameOver) return data;\n\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n\n    if( eventType === 'ArrowDown' ) {\n        console.log('ArrowDown')\n        // check every block, see if it should move\n        // set attribute to those should move\n        // and ONLY first couple got collapsed\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE-1; i>=0; i-=1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE-1; j>=0; j-=1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m=0; m<thisArray.length-1; m+=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m+1];\n                    thisArray[m+1] = 0;\n                }\n                if (thisArray[m] === thisArray[m+1]) {\n                    thisArray[m] = (thisArray[m]+thisArray[m+1]);\n                    thisArray[m+1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n                // A[i][BLOCKS_IN_ONE_LINE-1-m] = thisArray[m];\n            }\n            thisArray.length = BLOCKS_IN_ONE_LINE;//fill thisArray with undefined to length to BLOCKS_IN_ONE_LINE\n            for (let n=0; n<thisArray.length; n+=1) {\n                if(!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }// end of move down\n\n        return [reverseConvertor(A, BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowUp') {\n        console.log('ArrowUp')\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = thisArray.length - 1; m >0; m-=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m - 1];\n                    thisArray[m - 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m - 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m - 1]);\n                    thisArray[m - 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = thisArray.length -1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [reverseConvertor(A, BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowLeft') {\n        console.log('ArrowLeft')\n        //transposing\n        let A = zip(...twoDArray);\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = 0; j <= BLOCKS_IN_ONE_LINE - 1; j += 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            \n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray;\n        }\n        return [reverseConvertor(zip(...A), BLOCKS_IN_ONE_LINE), score ];\n    }\n\n    if( eventType === 'ArrowRight') {\n        console.log('ArrowRight')\n        //transposing\n        let A = zip(...twoDArray);\n\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [reverseConvertor(zip(...A), BLOCKS_IN_ONE_LINE), score ];\n    }\n}\n\n// moveHandler.propTypes = {\n//     eventType: PropTypes.string.isRequired,\n//     data: PropTypes.arrayOf(\n//             PropTypes.shape({\n//                 position: PropTypes.arrayOf(PropTypes.number),\n//                 num: PropTypes.number,\n//             })\n//         ),\n//     isGameOver: PropTypes.bool,\n//     score: PropTypes.number.isRequired,\n// }\n\nexport default moveHandler;","import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';import sample from 'lodash/sample';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport sampleSize from 'lodash/sampleSize';\nimport Cookies from 'js-cookie';\n\n// const BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst generator = function generatorTwoNodesRandomly(data, BLOCKS_IN_ONE_LINE) {\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n    const dataCopy = [...twoDArray];\n    \n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 2, BLOCKS_IN_ONE_LINE);\n     \n    // if (!resultTwoDArray) return false;\n\n    const result = reverseConvertor(resultTwoDArray, BLOCKS_IN_ONE_LINE);\n    return result;\n}\n\nconst generatorOne = function generatorOneNodeRandomly(data, BLOCKS_IN_ONE_LINE) {\n    const twoDArray = convertor(data, BLOCKS_IN_ONE_LINE);\n    const dataCopy = [...twoDArray];\n\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 1, BLOCKS_IN_ONE_LINE);\n\n    if (!resultTwoDArray) return false;\n    const result = reverseConvertor(resultTwoDArray, BLOCKS_IN_ONE_LINE);\n    return result;\n}\n\nconst generatorWithTwoDArray = function (data, size = 2, BLOCKS_IN_ONE_LINE) {\n    let potentialPosition = [];\n    let topFloor = 0;\n    let dataCopy = [...data];\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n            if(!dataCopy) dataCopy = 0;\n        }\n    }\n    for (let m = 0; m < dataCopy.length; m += 1) {\n        for (let n = 0; n < dataCopy[m].length; n += 1) {\n            if (dataCopy[m][n] > topFloor) topFloor = dataCopy[m][n];\n            if(!dataCopy[m][n]) potentialPosition.push([m, n]);\n        }\n    }\n\n    // if no more spaces then !!failed!!\n    if (potentialPosition.length === 0) return false;\n\n    if (size === 2) {\n        const [num1, num2] = generateNumber(topFloor);\n        const [position1, position2] = generatePosition(potentialPosition);\n\n        dataCopy[position1[0]][position1[1]] = num1;\n        dataCopy[position2[0]][position2[1]] = num2;\n\n        return dataCopy;\n    } \n\n    const num = generateNumber(topFloor, 1);\n    const position = generatePosition(potentialPosition, 1);\n    dataCopy[position[0]][position[1]] = num;\n    return dataCopy;\n}\n\ngenerator.defaultProps = {\n    data: [],\n};\n\n// {\n//     position: [3,3],\n//     num: 8\n// }\ngenerator.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n        ),\n    }\n    \n/**\n * @param {num} topFloor indicates current biggest number on plate  \n */\nconst generateNumber = function (topFloor, size = 2) {\n    let topFloorCheckLowest = 2;\n    if( topFloor > 2 ) topFloorCheckLowest = topFloor; \n    const pool = [2, 4, 8, 16, 32].filter(x=> x <= topFloorCheckLowest);\n    const num1 = sample(pool);\n    const num2 = sample(pool);\n    if (size === 2) return [num1,num2];\n    return num1;\n}\n\ngenerateNumber.propTypes = {\n    topFloor : PropTypes.number.isRequired,\n}\n\nconst generatePosition = function (potentialPosition, size = 2) {\n    if (size === 2) {\n        const result = sampleSize(potentialPosition, 2);\n        return result;    \n    } \n    const result = sample(potentialPosition);\n    return result;\n}\n\ngeneratePosition.propTypes = {\n    potentialPosition: PropTypes.arrayOf(\n        PropTypes.arrayOf(PropTypes.number)\n    ).isRequired,\n}\n\nexport { generator, generatorOne, generatorWithTwoDArray };","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Blocks from '../functions/Blocks';\nimport moveHandler from '../functions/move';\nimport { generator, generatorOne } from '../functions/generator';\nimport differenceWith from 'lodash/differenceWith';\nimport isEqual from 'lodash/isEqual';\nimport Cookies from 'js-cookie';\nimport { GameContext } from './GameContext';\n\nconst BlocksContainer = function groupAllBlocksTogether(props) {\n    // const { BLOCKS_IN_ONE_LINE } = useContext(GameContext);\n    // const { context, setContext } = useContext(GameContext);\n    // const { gameRestart, setGameRestart } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n\n    if (!Cookies.getJSON('data')) Cookies.set('data',[], {path: ''});\n    const initState = ((Cookies.getJSON('data') && Cookies.getJSON('data').length === 0)) ? generator([], state.BLOCKS_IN_ONE_LINE) : Cookies.getJSON('data');\n    \n    const [data, setData] = useState(initState);\n    \n\n    if (state.gameRestart) {\n        Cookies.set('data', [], {path:'/'});\n        Cookies.set('BlocksPerLine', state.BLOCKS_IN_ONE_LINE, { path: '/' });\n        window.location.reload(false);\n    };\n\n    \n    //move blocks \n    function eventHandler(e) {\n        console.log(e.code);\n        if (\n            e.code !== 'ArrowDown' \n            && e.code !== 'ArrowUp'\n            && e.code !== 'ArrowLeft'\n            && e.code !== 'ArrowRight'\n            ) { return; }\n            let [newState, score] = moveHandler(e.code, data, state.isGameOver, state.score, state.BLOCKS_IN_ONE_LINE);\n            \n            // setContext({ score: state.score + score});\n            dispatch({ type: \"updateScore\", score: score});\n            Cookies.set('score', state.score + score, { path: '' });\n            \n            let movementFailure = false;\n            \n            let diffBtwStates = differenceWith(newState, data, isEqual)\n            if (!diffBtwStates.length) movementFailure = true;\n            \n            // if no node are moved, should NOT generator new node\n            if(!movementFailure) {\n                newState = generatorOne(newState, state.BLOCKS_IN_ONE_LINE);\n                if (!!newState) {\n                    setData(newState);\n                    Cookies.set('data',newState, { path: ''});\n                } else {\n                    // setContext({isGameOver: true});\n                    dispatch({ type: \"gameOver\", isGameOver: true });\n                    Cookies.set('data', newState, { path: '' });\n                }\n            } else {\n                const maxBlocksNum = state.BLOCKS_IN_ONE_LINE ** 2;\n                if (maxBlocksNum === newState.length) {\n                    // setContext({ isGameOver: true });\n                    dispatch({ type: \"gameOver\", isGameOver: true });\n                    Cookies.set('data', [], { path: '' });\n                }\n            }\n            \n            //if no space to create new node then GAME OVER\n        }\n        \n        //add keyboard listener\n        useEffect(() => {\n            if (state.isLevelUpdate) {\n                setData(generator([], state.BLOCKS_IN_ONE_LINE));\n                dispatch({type:'isLevelUpdate',isLevelUpdate:false});\n            }\n            window.addEventListener('keydown', eventHandler);\n            return () => {\n            window.removeEventListener('keydown', eventHandler)\n        };\n    });\n\n    return (\n        <div style={{ 'position': 'absolute' }}>\n            <Blocks\n                data={data}\n                blockWidth={props.blockWidth}\n            ></Blocks>\n        </div>\n    );\n}\n\nBlocksContainer.defaultProps = {\n    blockWidth: 120,\n}\n\nBlocksContainer.propTypes = {\n    blockWidth : PropTypes.number.isRequired,\n};\n\nexport default BlocksContainer;","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Grid = function getGrid(props) {\n    // const { BLOCKS_IN_ONE_LINE, BG_BLOCK_COLOR, BG_COLOR } = useContext(GameContext);\n    const {state,dispatch} = useContext(GameContext);\n\n    let grids = [];\n    for (let i = 0; i < state.BLOCKS_IN_ONE_LINE ** 2; i++) {\n        grids.push(i);\n    }\n\n    const [ gridHeight, setGridHeight ] = useState(props.gridHeight);\n    useEffect( ()=>{\n        setGridHeight(props.gridHeight);\n    }, [props.gridHeight]);\n\n    return (\n        <Fragment>\n            {\n                grids.map(x => {\n                    return <div key={x} \n                            id={'grid_' + x} \n                            style={{    \n                                        'height': gridHeight, \n                                        'width': gridHeight,\n                                        'flexGrow': '1',\n                                        'flexShrink': '1',\n                                        'flexBasis': gridHeight,\n                                        'backgroundColor': state.BG_BLOCK_COLOR,\n                                        'border': '10px solid ' + state.BG_COLOR,\n                                        'boxSizing': 'border-box',\n                                                }}>\n                            </div>\n                })\n            }\n        </Fragment>\n    );\n}\n\nGrid.propTypes = {\n    gridHeight: PropTypes.string.isRequired,\n}\n\nexport default Grid;","import React, { useContext } from 'react';\nimport { GameContext } from './GameContext';\nimport PropTypes from 'prop-types';\n\nconst EndGame = function endGameScreen( props ) {\n    // const { context, } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    return (\n        <div style={{\n            'width': props.width,\n            'height': props.height,\n            'fontSize': '4rem',\n            'backgroundColor': 'rgba(16,17,20,0.8)',\n            'textAlign': 'center',\n            'lineHeight': props.height,\n            'position': 'absolute',\n            'display': state.isGameOver ? 'block' : 'none',\n            'zIndex': '1000',\n        }}>\n            GAME OVER\n        </div>\n    );\n}\n\nEndGame.propTypes = {\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n}\n\nexport default EndGame;","import React, {  Fragment, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n\n// import { BLOCKS_IN_ONE_LINE, BG_COLOR, } from '../GameConfig';\nimport Menus from './Menus';\nimport BlocksContainer from './BlocksContainer';\nimport Grid from './Grid';\nimport EndGame from './EndGameScreen';\nimport { GameContext } from './GameContext';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nconst Main = styled.div`\n    flex:2 1 0;\n    min-width: 400px;\n    max-width: 500px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 10px;\n    box-sizing: content-box;\n    position: relative;\n`;\n\nconst SideHolder = styled.div`\n    flex: 1 1 auto;\n    display: flex;\n`;\n\nconst MainContainer = function MainPlayGround() {\n    // const { BLOCKS_IN_ONE_LINE, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const minWidth = 400;\n    const [lineHeight, setLineHeight] = useState('0');\n    const [gridHeight, setGridHeight] = useState('0');\n    useEffect(()=>{\n        setHeight();\n        window.addEventListener('resize',setHeight);\n        return(()=>{\n            window.removeEventListener('resize',setHeight);\n        });\n    });\n    \n    function setHeight() {\n        let thisHeight = window.getComputedStyle(document.getElementById('mainHolder')).width;\n        let numThisHeight = Number(thisHeight.split('px')[0]);\n        thisHeight = numThisHeight < minWidth ? minWidth : numThisHeight;\n        let gridHeight = thisHeight / state.BLOCKS_IN_ONE_LINE;\n        setGridHeight(gridHeight);\n        setLineHeight(thisHeight);\n    }\n  \n    const [blockWidth, setBlockWidth] = useState(Number(gridHeight));\n    useEffect( ()=>{ \n        setBlockWidth(Number(gridHeight));\n    }, [gridHeight]);\n\n    return (\n        <Fragment>\n                <EndGame width={window.innerWidth+'px'} height={window.innerHeight+'px'}></EndGame>\n                <Container>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                    <Main id={'mainHolder'} style={{ 'height': lineHeight + 'px', 'backgroundColor': state.BG_COLOR}}>\n                        <BlocksContainer blockWidth={ blockWidth }></BlocksContainer>\n                        <Grid gridHeight={gridHeight+'px'}></Grid>\n                        <Menus width={lineHeight+'px'}></Menus>\n\n                    </Main>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                </Container>  \n        </Fragment>\n    );\n}\n\nexport default MainContainer;","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\n\nconst HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 10px 0px;\n`;\n\n// flex - shrink: 1;\n// flex - basis: 0;\nconst Header = function headerContainsScoreAndDescription() {\n    // const { GAME_NAME, GAME_DESCRIPTION, HEADER_HEIGHT, COLOR_SCHEME } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    // const { context, setContext } = useContext(GameContext);\n\n    return(\n        <HeaderContainer style={{ 'height': state.HEADER_HEIGHT}}>\n            <div style={{ 'flex': '1 1 auto' }}></div>\n            <div style={{ \n                        'flex': '2 1 0', \n                        'display': 'flex',\n                        'minWidth': '400px',\n                        'maxWidth': '500px', \n                    }}>\n                <div style={{ \n                        'flex': '1 1 auto',\n                        'textAlign': 'left', \n                        'display': 'flex',\n                        'flexDirection': 'column',\n                        'justifyContent': 'center',\n                    'height': state.HEADER_HEIGHT,\n                        'maxWidth': '50%',\n                    }}>\n                    <div style={{\n                        'flex': '2 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '3rem',\n                        'fontWeight': 'bold',\n                    }}>\n                        {state.GAME_NAME}                   \n                    </div>\n                    <div style={{\n                        'flex': '1 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '0.8rem',\n                    }}>\n                        {state.GAME_DESCRIPTION}\n                    </div>\n                </div>\n                <div style={{ 'flex': '1 1 auto', 'color': state.COLOR_SCHEME[128] }}>\n                    <h1>{state.score}</h1>\n                </div>\n            </div>\n            <div style={{ 'flex':'1 1 auto' }}></div>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","const BLOCKS_IN_ONE_LINE = 5;\nconst BG_COLOR = 'rgba(136, 129, 107, 1)';\nconst BG_BLOCK_COLOR = 'rgba(210, 207, 207, 0.8)';\nconst GAME_NAME = '2048';\nconst GAME_DESCRIPTION = 'Join those numbers and get as big as you can, 2048 is not the end!';\nconst HEADER_HEIGHT = '15vh';\nconst COLOR_SCHEME = {\n    2: '#f7f3e3',\n    4: '#fff4cc',\n    8: '#f9ca86',\n    16: '#f7ae47',\n    32: '#f29c71',\n    64: '#d3481d',\n    128: '#fff09b',\n    256: '#ffe85c',\n    512: '#ffd83f',\n    1024: '#ffd017',\n    2048: '#ffad16',\n    super: '#0094c8',\n}\n\nexport { \n    BLOCKS_IN_ONE_LINE, \n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n }","import React, { Fragment, useState, useEffect, useReducer} from 'react';\nimport './App.css';\nimport { GameContext } from './components/GameContext';\nimport Cookies from 'js-cookie';\nimport MainContainer from './components/MainContainer';\nimport Header from './components/Header';\nimport {\n  BLOCKS_IN_ONE_LINE,\n  BG_COLOR,\n  BG_BLOCK_COLOR,\n  GAME_NAME,\n  GAME_DESCRIPTION,\n  HEADER_HEIGHT,\n  COLOR_SCHEME,\n} from './GameConfig';\n\nfunction App() {\n\n  let cachedScore = Cookies.getJSON('score');\n\n  if (!Cookies.getJSON('BlocksPerLine')) {\n    Cookies.set('BlocksPerLine', BLOCKS_IN_ONE_LINE, {path:'/'});\n  }\n\n  let reducer = (state, action) => {\n    switch(action.type) {\n      case \"gameOver\":\n        return {...state, isGameOver: action.isGameOver};\n      case \"updateScore\":\n        return {...state, score: action.score};\n      case \"restart\":\n        return {...state, gameRestart: action.gameRestart};\n      case \"setGameLevel\":\n        return { ...state, BLOCKS_IN_ONE_LINE: action.gameLevel};\n      case \"isLevelUpdate\":\n        return {...state, isLevelUpdate: action.isLevelUpdate};\n      default:\n        return;\n    }\n  }\n\n  // const [gameContext, setGameContext] = useState({\n  //   isGameOver: false,\n  //   score: cachedScore ? cachedScore : 0,\n  //   gameRestart: false,\n  // });\n\n  const initContext = {\n    isGameOver: false,\n    score: cachedScore ? cachedScore : 0,\n    gameRestart: false,\n    isLevelUpdate: false,\n    BLOCKS_IN_ONE_LINE: Cookies.getJSON('BlocksPerLine') ? Cookies.getJSON('BlocksPerLine') : BLOCKS_IN_ONE_LINE ,\n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n  }\n\n  //FIXME:update gamecontext.gamerestart\n  // const [gameRestart, setGameRestart] = useState(false);\n  // useEffect( ()=>{\n  //   setGameRestart(true);\n  // });\n\n  const [state, dispatch] = useReducer(reducer, initContext);\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <GameContext.Provider value={{state, dispatch}}>\n          <Header></Header>\n          <MainContainer></MainContainer>\n        </GameContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}