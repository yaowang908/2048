{"version":3,"sources":["components/GameContext.jsx","components/Menus.jsx","components/Block.jsx","functions/Blocks.jsx","functions/convertor.jsx","functions/move.jsx","functions/generator.jsx","components/BlocksContainer.jsx","components/Grid.jsx","components/EndGameScreen.jsx","components/MainContainer.jsx","components/Header.jsx","GameConfig.jsx","App.js","serviceWorker.js","index.js"],"names":["GameContext","createContext","MenuContainer","styled","div","_templateObject","Menus","props","_useState","useState","_useState2","Object","slicedToArray","width","setWidth","useEffect","_useContext","useContext","dispatch","state","_useState3","_useState4","isOpen","setIsOpen","react_default","a","createElement","style","List_default","backgroundColor","boxShadow","borderRadius","ListItem_default","button","onClick","ListItemText_default","inset","primary","color","fontWeight","fontFamily","fontSize","paddingLeft","marginTop","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","textAlign","borderBottom","Button_default","variant","size","type","gameRestart","Cookies","set","path","Block","position","setPosition","_useState5","COLOR_SCHEME","_useState6","setColor","num","height","left","top","lineHeight","boxSizing","border","BG_COLOR","Blocks","data","setData","blockWidth","setBlockWidth","react","map","x","index","components_Block","key","BLOCKS_IN_ONE_LINE","get","convertor","result","subLevel","m","push","n","concat","propTypes","PropTypes","arrayOf","shape","number","reverseConvertor","moveHandler","eventType","isGameOver","arguments","length","undefined","score","twoDArray","console","log","A","toConsumableArray","i","thisArray","j","reverse","zip","apply","generator","dataCopy","resultTwoDArray","generatorWithTwoDArray","generatorOne","potentialPosition","topFloor","_generateNumber","generateNumber","_generateNumber2","num1","num2","_generatePosition","generatePosition","_generatePosition2","position1","position2","defaultProps","topFloorCheckLowest","pool","filter","sample","isRequired","sampleSize","BlocksContainer","getJSON","initState","eventHandler","e","code","_moveHandler","_moveHandler2","newState","movementFailure","differenceWith","isEqual","Math","pow","window","location","reload","addEventListener","removeEventListener","functions_Blocks","Grid","grids","gridHeight","setGridHeight","id","flexGrow","flexShrink","flexBasis","BG_BLOCK_COLOR","EndGame","display","zIndex","Container","MainContainer_templateObject","Main","_templateObject2","SideHolder","_templateObject3","MainContainer","minWidth","setLineHeight","setHeight","thisHeight","getComputedStyle","document","getElementById","numThisHeight","Number","split","setBlcokWidth","EndGameScreen","innerWidth","innerHeight","className","components_BlocksContainer","components_Grid","components_Menus","HeaderContainer","Header_templateObject","Header","HEADER_HEIGHT","flex","maxWidth","flexDirection","justifyContent","GAME_NAME","GAME_DESCRIPTION","2","4","8","16","32","64","128","256","512","1024","2048","super","App","cachedScore","initContext","_useReducer","useReducer","action","objectSpread","_useReducer2","Provider","value","components_Header","components_MainContainer","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c8fafb9.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const GameContext = createContext({});","import React, { useState, useEffect,useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\nimport Cookies from 'js-cookie';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst MenuContainer = styled.div`\n    margin-top: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Menus = function CreateBottomMenu(props) {\n    const [width, setWidth] = useState('400px');\n\n    useEffect( () => {\n        setWidth(props.width);\n    }, [props.width] );\n\n    // const { gameRestart, setGameRestart  } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n    const [ isOpen, setIsOpen ] = useState(false);\n\n    function restartGame() {\n        // setGameRestart(true);\n        dispatch({type:'restart', gameRestart: true});\n        Cookies.set('score',0, {path:'/'});\n    }\n\n    return(\n        <MenuContainer style={{ 'width':width }}>\n            {/* <Button variant=\"contained\" color=\"secondary\" size=\"medium\">Game Level</Button> */}\n            <List style={{\n                    'backgroundColor': '#f50057',\n                    'boxShadow': '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n                    'borderRadius': '4px', \n                    }}>\n                <ListItem button onClick={()=>{setIsOpen(!isOpen)}}>\n                    <ListItemText inset \n                    primary={<span style={{ \n                            \"color\": \"#fff\",\n                            'fontWeight': '500',\n                            'fontFamily': '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n                            'fontSize': '0.875rem', \n                        }}>GAME LEVEL</span>} \n                    style={{\n                        'color': '#fff',\n                        'paddingLeft': '10px',\n                        'marginTop': '-10px',\n                    }}/>\n                    {isOpen ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding style={{\n                        'backgroundColor': '#282c34',\n                    }}>\n                        <ListItem button>\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>4 x 4</span>} style={{\n                                'paddingLeft': '10px',\n                                'textAlign': 'center',\n                                'borderBottom': '1px solid #fff',\n                            }}/>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>5 x 5</span>} style={{\n                                'paddingLeft': '10px',\n                                'textAlign': 'center',\n                                'borderBottom': '1px solid #fff',\n                            }}/>\n                        </ListItem>\n                        <ListItem button>\n                            <ListItemText inset primary={<span style={{\"color\": \"#fff\"}}>10 x 10</span>} style={{\n                                'paddingLeft': '10px',\n                                'textAlign': 'center',\n                                'borderBottom': '1px solid #fff',\n                            }}/>\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </List>\n            <Button variant=\"contained\" color=\"secondary\" size=\"medium\" onClick={restartGame}>Restart</Button>\n        </MenuContainer>      \n    );\n}\n\nMenus.propTypes = {\n    width: PropTypes.string.isRequired,\n}\n\nexport default Menus;","import React, { useState, useEffect, useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Block = function indivitualBlock(props) {\n    // const { COLOR_SCHEME, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const [width, setWidth] = useState(0);\n    useEffect( () => {\n        setWidth(props.width);\n    },[props.width]);\n\n    const [position, setPosition] = useState(props.position);\n    useEffect( () => {\n        setPosition(props.position);\n    },[props.position]);\n\n    const [color, setColor] = useState(state.COLOR_SCHEME[2]);\n    useEffect( () => {\n        if (!!state.COLOR_SCHEME[props.num]) setColor(state.COLOR_SCHEME[props.num]);\n    },[props.num]);\n\n    return(\n        <div style={{\n            'width': width+'px',\n            'height': width + 'px',\n            'position': 'absolute',\n            'left': (position[0] * width) + 'px',\n            'top': (position[1] * width) + 'px',\n            'lineHeight': (width - 20) + 'px',\n            'textAlign': 'center',\n            'color': props.num>256 ? '#f2f2f2' : '#000',\n            'fontSize': props.num>64 ? '2rem' : '2.5rem',\n            'fontWeight': 'bold',\n            'backgroundColor': color,\n            'boxSizing': 'border-box',\n            'border': '10px solid ' + state.BG_COLOR,\n        }}>\n            {props.num}\n        </div>\n    );\n}\n\nBlock.propTypes = {\n    num: PropTypes.number.isRequired,\n    position: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n}\n\nexport default Block;","import React, { useState, useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Block from '../components/Block';\n\nconst Blocks = function drawAllBlocks(props) {\n    const [data,setData] = useState(props.data);\n    useEffect(() => {\n        setData(props.data);\n    },[props.data]);\n\n    const [blockWidth, setBlockWidth] = useState(props.blockWidth);\n    useEffect(() => {\n        setBlockWidth(props.blockWidth);\n    },[props.blockWidth]);\n\n    return(\n        <Fragment>\n            {data.map((x, index)=>{\n                return <Block num={x.num} key={index} position={x.position} width={blockWidth}></Block>\n            })}\n        </Fragment>\n    );\n}\n\nBlocks.propTypes = {\n    data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    position: PropTypes.arrayOf(PropTypes.number),\n                    num: PropTypes.number,\n                })\n            ),\n    blockWidth: PropTypes.number,\n}\n\nexport default Blocks;","import PropTypes from 'prop-types';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport Cookies from 'js-cookie';\n\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst convertor = function convertObjectArrayToTwoDimentionArray(data) {\n    let result = [];\n    let subLevel = [];\n    for(let m=0; m<BLOCKS_IN_ONE_LINE; m+=1) {\n        subLevel.push(0);\n    }\n    for(let n=0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n        result.push([...subLevel]);\n    }\n\n    if(!data) return result;\n\n    data.map(x => {\n        result[x.position[0]][x.position[1]] = x.num;\n    });\n\n    return result;\n}\n\nconvertor.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n    ),\n}\n\nconst reverseConvertor = function (data) {\n    let result = [];\n\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n < BLOCKS_IN_ONE_LINE; n += 1) {\n            if(data[m][n]) {\n                result.push({\n                    position: [m,n],\n                    num: data[m][n],\n                });\n            }\n        }\n    }\n\n    return result;\n}\n\nreverseConvertor.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport { convertor, reverseConvertor };","// import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport zip from 'lodash/zip';\nimport Cookies from 'js-cookie';\n\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst moveHandler = function listenToKeyboardAndRecieveDataAndReturnMutated(eventType, data, isGameOver = false, score = 0) {\n    if(isGameOver) return data;\n\n    const twoDArray = convertor(data);\n\n    if( eventType === 'ArrowDown' ) {\n        console.log('ArrowDown')\n        // check every block, see if it should move\n        // set attribute to those should move\n        // and ONLY first couple got collapsed\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE-1; i>=0; i-=1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE-1; j>=0; j-=1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m=0; m<thisArray.length-1; m+=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m+1];\n                    thisArray[m+1] = 0;\n                }\n                if (thisArray[m] === thisArray[m+1]) {\n                    thisArray[m] = (thisArray[m]+thisArray[m+1]);\n                    thisArray[m+1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n                // A[i][BLOCKS_IN_ONE_LINE-1-m] = thisArray[m];\n            }\n            thisArray.length = BLOCKS_IN_ONE_LINE;//fill thisArray with undefined to length to BLOCKS_IN_ONE_LINE\n            for (let n=0; n<thisArray.length; n+=1) {\n                if(!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }// end of move down\n\n        return [ reverseConvertor(A), score ];\n    }\n\n    if( eventType === 'ArrowUp') {\n        console.log('ArrowUp')\n        let A = [...twoDArray];\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = thisArray.length - 1; m >0; m-=1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m - 1];\n                    thisArray[m - 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m - 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m - 1]);\n                    thisArray[m - 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = thisArray.length -1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [ reverseConvertor(A), score ];\n    }\n\n    if( eventType === 'ArrowLeft') {\n        console.log('ArrowLeft')\n        //transposing\n        let A = zip(...twoDArray);\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = 0; j <= BLOCKS_IN_ONE_LINE - 1; j += 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            \n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray;\n        }\n        return [ reverseConvertor(zip(...A)), score ];\n    }\n\n    if( eventType === 'ArrowRight') {\n        console.log('ArrowRight')\n        //transposing\n        let A = zip(...twoDArray);\n\n        for (let i = BLOCKS_IN_ONE_LINE - 1; i >= 0; i -= 1) {\n            let thisArray = [];\n            for (let j = BLOCKS_IN_ONE_LINE - 1; j >= 0; j -= 1) {\n                if (A[i][j] !== 0) {\n                    thisArray.push(A[i][j]);\n                    A[i][j] = 0;\n                }\n            }\n            for (let m = 0; m < thisArray.length - 1; m += 1) {\n                if (thisArray[m] === 0) {\n                    thisArray[m] = thisArray[m + 1];\n                    thisArray[m + 1] = 0;\n                }\n                if (thisArray[m] === thisArray[m + 1]) {\n                    thisArray[m] = (thisArray[m] + thisArray[m + 1]);\n                    thisArray[m + 1] = 0;\n                    score += thisArray[m];//increase game score\n                }\n            }\n            for (let n = BLOCKS_IN_ONE_LINE - 1; n > 0; n -= 1) {\n                if (!!thisArray[n]) {\n                    //do nothing\n                } else {\n                    thisArray[n] = 0;\n                }\n            }\n            A[i] = thisArray.reverse();\n        }\n        return [ reverseConvertor(zip(...A)), score ];\n    }\n}\n\n// moveHandler.propTypes = {\n//     eventType: PropTypes.string.isRequired,\n//     data: PropTypes.arrayOf(\n//             PropTypes.shape({\n//                 position: PropTypes.arrayOf(PropTypes.number),\n//                 num: PropTypes.number,\n//             })\n//         ),\n//     isGameOver: PropTypes.bool,\n//     score: PropTypes.number.isRequired,\n// }\n\nexport default moveHandler;","import PropTypes from 'prop-types';\nimport { convertor, reverseConvertor } from './convertor';import sample from 'lodash/sample';\n// import { BLOCKS_IN_ONE_LINE } from '../GameConfig';\nimport sampleSize from 'lodash/sampleSize';\nimport Cookies from 'js-cookie';\n\nconst BLOCKS_IN_ONE_LINE = Cookies.get('BlocksPerLine');\n\nconst generator = function generatorTwoNodesRandomly(data) {\n    const twoDArray = convertor(data);\n    const dataCopy = [...twoDArray];\n\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy);\n     \n    if (!resultTwoDArray) return false;\n    const result = reverseConvertor(resultTwoDArray);\n    return result;\n}\n\nconst generatorOne = function generatorOneNodeRandomly(data) {\n    const twoDArray = convertor(data);\n    const dataCopy = [...twoDArray];\n\n    const resultTwoDArray = generatorWithTwoDArray(dataCopy, 1);\n\n    if (!resultTwoDArray) return false;\n    const result = reverseConvertor(resultTwoDArray);\n    return result;\n}\n\nconst generatorWithTwoDArray = function (data, size = 2) {\n    let potentialPosition = [];\n    let topFloor = 0;\n    let dataCopy = [...data];\n    for (let m = 0; m < BLOCKS_IN_ONE_LINE; m += 1) {\n        for (let n = 0; n<BLOCKS_IN_ONE_LINE; n+=1) {\n            if(!dataCopy) dataCopy = 0;\n        }\n    }\n    for (let m = 0; m < dataCopy.length; m += 1) {\n        for (let n = 0; n < dataCopy[m].length; n += 1) {\n            if (dataCopy[m][n] > topFloor) topFloor = dataCopy[m][n];\n            if(!dataCopy[m][n]) potentialPosition.push([m, n]);\n        }\n    }\n\n    // if no more spaces then !!failed!!\n    if (potentialPosition.length === 0) return false;\n\n    if (size === 2) {\n        const [num1, num2] = generateNumber(topFloor);\n        const [position1, position2] = generatePosition(potentialPosition);\n\n        dataCopy[position1[0]][position1[1]] = num1;\n        dataCopy[position2[0]][position2[1]] = num2;\n\n        return dataCopy;\n    } \n\n    const num = generateNumber(topFloor, 1);\n    const position = generatePosition(potentialPosition, 1);\n    dataCopy[position[0]][position[1]] = num;\n    return dataCopy;\n}\n\ngenerator.defaultProps = {\n    data: [],\n};\n\n// {\n//     position: [3,3],\n//     num: 8\n// }\ngenerator.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            position: PropTypes.arrayOf(PropTypes.number),\n            num: PropTypes.number,\n        })\n        ),\n    }\n    \n/**\n * @param {num} topFloor indicates current biggest number on plate  \n */\nconst generateNumber = function (topFloor, size = 2) {\n    let topFloorCheckLowest = 2;\n    if( topFloor > 2 ) topFloorCheckLowest = topFloor; \n    const pool = [2, 4, 8, 16, 32].filter(x=> x <= topFloorCheckLowest);\n    const num1 = sample(pool);\n    const num2 = sample(pool);\n    if (size === 2) return [num1,num2];\n    return num1;\n}\n\ngenerateNumber.propTypes = {\n    topFloor : PropTypes.number.isRequired,\n}\n\nconst generatePosition = function (potentialPosition, size = 2) {\n    if (size === 2) {\n        const result = sampleSize(potentialPosition, 2);\n        return result;    \n    } \n    const result = sample(potentialPosition);\n    return result;\n}\n\ngeneratePosition.propTypes = {\n    potentialPosition: PropTypes.arrayOf(\n        PropTypes.arrayOf(PropTypes.number)\n    ).isRequired,\n}\n\nexport { generator, generatorOne, generatorWithTwoDArray };","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Blocks from '../functions/Blocks';\nimport moveHandler from '../functions/move';\nimport { generator, generatorOne } from '../functions/generator';\nimport differenceWith from 'lodash/differenceWith';\nimport isEqual from 'lodash/isEqual';\nimport Cookies from 'js-cookie';\nimport { GameContext } from './GameContext';\n\nconst BlocksContainer = function groupAllBlocksTogether(props) {\n    // const { BLOCKS_IN_ONE_LINE } = useContext(GameContext);\n    // const { context, setContext } = useContext(GameContext);\n    // const { gameRestart, setGameRestart } = useContext(GameContext);\n    const { state, dispatch } = useContext(GameContext);\n\n    if (!Cookies.getJSON('data')) Cookies.set('data',[], {path: ''});\n    const initState = ((Cookies.getJSON('data') && Cookies.getJSON('data').length === 0)) ? generator([]) : Cookies.getJSON('data');\n    const [data, setData] = useState(initState);\n    \n\n    if (state.gameRestart) {\n        Cookies.set('data', [], {path:'/'});\n        window.location.reload(false);\n    };\n\n    //move blocks \n    function eventHandler(e) {\n        console.log(e.code);\n        if (\n            e.code !== 'ArrowDown' \n            && e.code !== 'ArrowUp'\n            && e.code !== 'ArrowLeft'\n            && e.code !== 'ArrowRight'\n            ) { return; }\n        let [newState, score] = moveHandler(e.code, data, state.isGameOver);\n\n        // setContext({ score: state.score + score});\n        dispatch({ type: \"updateScore\", score: state.score + score});\n        Cookies.set('score', state.score + score, { path: '' });\n\n        let movementFailure = false;\n\n        let diffBtwStates = differenceWith(newState, data, isEqual)\n        if (!diffBtwStates.length) movementFailure = true;\n        \n        // if no node are moved, should NOT generator new node\n        if(!movementFailure) {\n            newState = generatorOne(newState);\n            if (!!newState) {\n                setData(newState);\n                Cookies.set('data',newState, { path: ''});\n            } else {\n                // setContext({isGameOver: true});\n                dispatch({ type: \"gameOver\", isGameOver: true });\n                Cookies.set('data', newState, { path: '' });\n            }\n        } else {\n            const maxBlocksNum = state.BLOCKS_IN_ONE_LINE ** 2;\n            if (maxBlocksNum === newState.length) {\n                // setContext({ isGameOver: true });\n                dispatch({ type: \"gameOver\", isGameOver: true });\n                Cookies.set('data', [], { path: '' });\n            }\n        }\n\n        //if no space to create new node then GAME OVER\n    }\n\n    //add keyboard listener\n    useEffect(() => {\n        window.addEventListener('keydown', eventHandler);\n        return () => {\n            window.removeEventListener('keydown', eventHandler)\n        };\n    });\n\n    return (\n        <div style={{ 'position': 'absolute' }}>\n            <Blocks\n                data={data}\n                blockWidth={props.blockWidth}\n            ></Blocks>\n        </div>\n    );\n}\n\nBlocksContainer.defaultProps = {\n    blockWidth: 120,\n}\n\nBlocksContainer.propTypes = {\n    blockWidth : PropTypes.number.isRequired,\n};\n\nexport default BlocksContainer;","import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { GameContext } from './GameContext';\n\nconst Grid = function getGrid(props) {\n    // const { BLOCKS_IN_ONE_LINE, BG_BLOCK_COLOR, BG_COLOR } = useContext(GameContext);\n    const {state,dispatch} = useContext(GameContext);\n\n    let grids = [];\n    for (let i = 0; i < state.BLOCKS_IN_ONE_LINE ** 2; i++) {\n        grids.push(i);\n    }\n\n    const [ gridHeight, setGridHeight ] = useState(props.gridHeight);\n    useEffect( ()=>{\n        setGridHeight(props.gridHeight);\n    }, [props.gridHeight]);\n\n    return (\n        <Fragment>\n            {\n                grids.map(x => {\n                    return <div key={x} \n                            id={'grid_' + x} \n                            style={{    \n                                        'height': gridHeight, \n                                        'width': gridHeight,\n                                        'flexGrow': '1',\n                                        'flexShrink': '1',\n                                        'flexBasis': gridHeight,\n                                        'backgroundColor': state.BG_BLOCK_COLOR,\n                                        'border': '10px solid ' + state.BG_COLOR,\n                                        'boxSizing': 'border-box',\n                                                }}>\n                            </div>\n                })\n            }\n        </Fragment>\n    );\n}\n\nGrid.propTypes = {\n    gridHeight: PropTypes.string.isRequired,\n}\n\nexport default Grid;","import React, { useContext } from 'react';\nimport { GameContext } from './GameContext';\nimport PropTypes from 'prop-types';\n\nconst EndGame = function endGameScreen( props ) {\n    // const { context, } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    return (\n        <div style={{\n            'width': props.width,\n            'height': props.height,\n            'fontSize': '4rem',\n            'backgroundColor': 'rgba(16,17,20,0.8)',\n            'textAlign': 'center',\n            'lineHeight': props.height,\n            'position': 'absolute',\n            'display': state.isGameOver ? 'block' : 'none',\n            'zIndex': '1000',\n        }}>\n            GAME OVER\n        </div>\n    );\n}\n\nEndGame.propTypes = {\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n}\n\nexport default EndGame;","import React, {  Fragment, useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\n\n// import { BLOCKS_IN_ONE_LINE, BG_COLOR, } from '../GameConfig';\nimport Menus from './Menus';\nimport BlocksContainer from './BlocksContainer';\nimport Grid from './Grid';\nimport EndGame from './EndGameScreen';\nimport { GameContext } from './GameContext';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n`;\n\nconst Main = styled.div`\n    flex-grow: 2;\n    flex-shrink: 1;\n    flex-basis: 0;\n    min-width: 400px;\n    max-width: 600px;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 10px;\n    box-sizing: content-box;\n    position: relative;\n`;\n\nconst SideHolder = styled.div`\n    flex-grow: 1;\n    display: flex;\n`;\n\nconst MainContainer = function MainPlayGround() {\n    // const { BLOCKS_IN_ONE_LINE, BG_COLOR } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    const minWidth = 400;\n    const [lineHeight, setLineHeight] = useState('0');\n    const [gridHeight, setGridHeight] = useState('0');\n    useEffect(()=>{\n        setHeight();\n        window.addEventListener('resize',setHeight);\n        return(()=>{\n            window.removeEventListener('resize',setHeight);\n        });\n    });\n    \n    function setHeight() {\n        let thisHeight = window.getComputedStyle(document.getElementById('mainHolder')).width;\n        let numThisHeight = Number(thisHeight.split('px')[0]);\n        thisHeight = numThisHeight < minWidth ? minWidth : numThisHeight;\n        let gridHeight = thisHeight / state.BLOCKS_IN_ONE_LINE;\n        setGridHeight(gridHeight);\n        setLineHeight(thisHeight);\n    }\n  \n    const [blockWidth, setBlcokWidth] = useState(Number(gridHeight));\n    useEffect( ()=>{ \n        setBlcokWidth(Number(gridHeight));\n    }, [gridHeight]);\n\n    return (\n        <Fragment>\n                <EndGame width={window.innerWidth+'px'} height={window.innerHeight+'px'}></EndGame>\n                <Container>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                <Main id={'mainHolder'} style={{ 'height': lineHeight + 'px', 'backgroundColor': state.BG_COLOR}}>\n                        <BlocksContainer blockWidth={ blockWidth }></BlocksContainer>\n                        <Grid gridHeight={gridHeight+'px'}></Grid>\n                    </Main>\n                    <SideHolder className={'sideHolder'}></SideHolder>\n                </Container>  \n                <Menus width={lineHeight+'px'}></Menus>\n        </Fragment>\n    );\n}\n\nexport default MainContainer;","import React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport { GameContext } from './GameContext';\n\nconst HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 10px 0px;\n`;\n\n// flex - shrink: 1;\n// flex - basis: 0;\nconst Header = function headerContainsScoreAndDescription() {\n    // const { GAME_NAME, GAME_DESCRIPTION, HEADER_HEIGHT, COLOR_SCHEME } = useContext(GameContext);\n    const {state, dispatch} = useContext(GameContext);\n\n    // const { context, setContext } = useContext(GameContext);\n\n    return(\n        <HeaderContainer style={{ 'height': state.HEADER_HEIGHT}}>\n            <div style={{ 'flex': '1 1 auto' }}></div>\n            <div style={{ \n                        'flex': '2 1 0', \n                        'display': 'flex',\n                        'minWidth': '400px',\n                        'maxWidth': '600px', \n                    }}>\n                <div style={{ \n                        'flex': '1 1 auto',\n                        'textAlign': 'left', \n                        'display': 'flex',\n                        'flexDirection': 'column',\n                        'justifyContent': 'center',\n                    'height': state.HEADER_HEIGHT,\n                        'maxWidth': '50%',\n                    }}>\n                    <div style={{\n                        'flex': '2 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '3rem',\n                        'fontWeight': 'bold',\n                    }}>\n                        {state.GAME_NAME}                   \n                    </div>\n                    <div style={{\n                        'flex': '1 1 auto',\n                        'textAlign': 'left',\n                        'fontSize': '0.8rem',\n                    }}>\n                        {state.GAME_DESCRIPTION}\n                    </div>\n                </div>\n                <div style={{ 'flex': '1 1 auto', 'color': state.COLOR_SCHEME[128] }}>\n                    <h1>{state.score}</h1>\n                </div>\n            </div>\n            <div style={{ 'flex':'1 1 auto' }}></div>\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","const BLOCKS_IN_ONE_LINE = 5;\nconst BG_COLOR = 'rgba(136, 129, 107, 1)';\nconst BG_BLOCK_COLOR = 'rgba(210, 207, 207, 0.8)';\nconst GAME_NAME = '2048';\nconst GAME_DESCRIPTION = 'Join those numbers and get as big as you can, 2048 is not the end!';\nconst HEADER_HEIGHT = '15vh';\nconst COLOR_SCHEME = {\n    2: '#f7f3e3',\n    4: '#fff4cc',\n    8: '#f9ca86',\n    16: '#f7ae47',\n    32: '#f29c71',\n    64: '#d3481d',\n    128: '#fff09b',\n    256: '#ffe85c',\n    512: '#ffd83f',\n    1024: '#ffd017',\n    2048: '#ffad16',\n    super: '#0094c8',\n}\n\nexport { \n    BLOCKS_IN_ONE_LINE, \n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n }","import React, { Fragment, useState, useEffect, useReducer} from 'react';\nimport './App.css';\nimport { GameContext } from './components/GameContext';\nimport Cookies from 'js-cookie';\nimport MainContainer from './components/MainContainer';\nimport Header from './components/Header';\nimport {\n  BLOCKS_IN_ONE_LINE,\n  BG_COLOR,\n  BG_BLOCK_COLOR,\n  GAME_NAME,\n  GAME_DESCRIPTION,\n  HEADER_HEIGHT,\n  COLOR_SCHEME,\n} from './GameConfig';\n\nfunction App() {\n\n  let cachedScore = Cookies.getJSON('score');\n  Cookies.set('BlocksPerLine', BLOCKS_IN_ONE_LINE, {path:'/'});\n\n  let reducer = (state, action) => {\n    switch(action.type) {\n      case \"gameOver\":\n        return {...state, isGameOver: action.isGameOver};\n      case \"updateScore\":\n        return {...state, score: action.score};\n      case \"restart\":\n        return {...state, gameRestart: action.gameRestart};\n      default:\n        return;\n    }\n  }\n\n  // const [gameContext, setGameContext] = useState({\n  //   isGameOver: false,\n  //   score: cachedScore ? cachedScore : 0,\n  //   gameRestart: false,\n  // });\n\n  const initContext = {\n    isGameOver: false,\n    score: cachedScore ? cachedScore : 0,\n    gameRestart: false,\n    BLOCKS_IN_ONE_LINE,\n    BG_COLOR,\n    BG_BLOCK_COLOR,\n    GAME_NAME,\n    GAME_DESCRIPTION,\n    HEADER_HEIGHT,\n    COLOR_SCHEME,\n  }\n\n  //FIXME:update gamecontext.gamerestart\n  // const [gameRestart, setGameRestart] = useState(false);\n  // useEffect( ()=>{\n  //   setGameRestart(true);\n  // });\n\n  const [state, dispatch] = useReducer(reducer, initContext);\n  \n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <GameContext.Provider value={{state, dispatch}}>\n          <Header></Header>\n          <MainContainer></MainContainer>\n        </GameContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}